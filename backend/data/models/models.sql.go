// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: models.sql

package models

import (
	"context"
)

const controllableUnitLookup = `-- name: ControllableUnitLookup :one
SELECT
    accounting_point_id::bigint,
    accounting_point_business_id::text,
    end_user_id::bigint,
    controllable_units::jsonb[]
FROM controllable_unit_lookup(
  $1,
  -- empty strings considered as missing values
  nullif($2::text, ''),
  nullif($3::text, '')
)
`

type ControllableUnitLookupRow struct {
	AccountingPointID         int
	AccountingPointBusinessID string
	EndUserID                 int
	ControllableUnits         [][]byte
}

func (q *Queries) ControllableUnitLookup(ctx context.Context, endUserBusinessID string, controllableUnitBusinessID string, accountingPointID string) (ControllableUnitLookupRow, error) {
	row := q.db.QueryRow(ctx, controllableUnitLookup, endUserBusinessID, controllableUnitBusinessID, accountingPointID)
	var i ControllableUnitLookupRow
	err := row.Scan(
		&i.AccountingPointID,
		&i.AccountingPointBusinessID,
		&i.EndUserID,
		&i.ControllableUnits,
	)
	return i, err
}
