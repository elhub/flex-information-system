{
    "openapi": "3.1.0",
    "info": {
        "title": "Flexibility Information System Main API",
        "description": "Norwegian Flexibility Information System Main API",
        "contact": {
            "name": "Elhub AS",
            "url": "https://elhub.no",
            "email": "post@elhub.no"
        },
        "version": "0.0.1"
    },
    "externalDocs": {
        "description": "TODO",
        "url": "https://todo.example.com"
    },
    "jsonSchemaDialect": "https://spec.openapis.org/oas/3.1/dialect/base",
    "tags": [
        {
            "name": "introspection",
            "description": "Introspection"
        },
        {
            "name": "controllable_unit",
            "description": "Controllable unit"
        },
        {
            "name": "controllable_unit_service_provider",
            "description": "Relation between controllable unit and service provider"
        },
        {
            "name": "service_providing_group",
            "description": "Service providing group"
        },
        {
            "name": "service_providing_group_membership",
            "description": "Membership relation of controllable unit in service providing group"
        },
        {
            "name": "service_providing_group_grid_prequalification",
            "description": "Grid prequalification for service providing group"
        },
        {
            "name": "entity",
            "description": "Entity"
        },
        {
            "name": "entity_client",
            "description": "Entity client"
        },
        {
            "name": "party",
            "description": "Party"
        },
        {
            "name": "party_membership",
            "description": "Party Membership"
        },
        {
            "name": "identity",
            "description": "Identity"
        },
        {
            "name": "technical_resource",
            "description": "Technical Resource"
        },
        {
            "name": "event",
            "description": "Event"
        },
        {
            "name": "notification",
            "description": "Notification"
        },
        {
            "name": "accounting_point",
            "description": "Accounting Point"
        },
        {
            "name": "accounting_point_balance_responsible_party",
            "description": "Accounting Point Balance Responsible Party"
        },
        {
            "name": "accounting_point_energy_supplier",
            "description": "Accounting Point Energy Supplier"
        },
        {
            "name": "product_type",
            "description": "Product Type"
        },
        {
            "name": "system_operator_product_type",
            "description": "System Operator Product Type"
        },
        {
            "name": "service_provider_product_application",
            "description": "Service Provider Product Application"
        },
        {
            "name": "service_provider_product_application_comment",
            "description": "Service Provider Product Application Comment"
        },
        {
            "name": "service_providing_group_product_application",
            "description": "Service Providing Group Product Application"
        },
        {
            "name": "notice",
            "description": "Notice"
        }
    ],
    "components": {
        "parameters": {},
        "schemas": {
            "error_message": {
                "description": "Error message returned from the API.",
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "pattern": "^[A-Z0-9]+$",
                        "description": "The error code.",
                        "example": "PT418"
                    },
                    "details": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Detailed information about the error.",
                        "example": null
                    },
                    "hint": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "A hint to help resolve the error.",
                        "example": null
                    },
                    "message": {
                        "type": "string",
                        "description": "The error message.",
                        "example": "error"
                    }
                },
                "required": [
                    "code",
                    "message"
                ]
            },
            "controllable_unit_lookup_request": {
                "summary": "Controllable unit lookup",
                "description": "Request schema for controllable unit lookup operations",
                "type": "object",
                "properties": {
                    "end_user": {
                        "description": "Birth number or organisation number of the end user.",
                        "format": "text",
                        "type": "string",
                        "example": "8d4bde5a-decc-4e92-9a04-a64f258921f0"
                    },
                    "controllable_unit": {
                        "description": "The business ID of the controllable unit to lookup.",
                        "format": "text",
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "example": "53919b79-876f-4dad-8bde-b29368367604"
                    },
                    "accounting_point": {
                        "description": "The accounting point ID of the controllable unit(s) to lookup. `GSRN` metering point id.",
                        "format": "text",
                        "type": "string",
                        "pattern": "^[1-9][0-9]{17}$",
                        "example": "709000000000000057"
                    }
                },
                "required": [
                    "end_user"
                ]
            },
            "controllable_unit_lookup_response": {
                "summary": "Controllable unit lookup",
                "description": "Response schema for controllable unit lookup operations",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "The surrogate key of the controllable unit.",
                        "format": "bigint",
                        "type": "integer",
                        "example": 11
                    },
                    "business_id": {
                        "description": "The business ID of the controllable unit.",
                        "format": "text",
                        "type": "string",
                        "example": "53919b79-876f-4dad-8bde-b29368367604"
                    },
                    "name": {
                        "description": "The name of the controllable unit.",
                        "format": "text",
                        "type": "string",
                        "example": "Car Charger #54"
                    },
                    "accounting_point_id": {
                        "description": "The accounting point behind which the controllable unit is located.",
                        "format": "bigint",
                        "type": "integer",
                        "example": 100351
                    },
                    "end_user_id": {
                        "description": "Technical ID of the end user on the accounting point where the controllable unit is located.",
                        "format": "bigint",
                        "type": "integer",
                        "example": 11
                    },
                    "technical_resources": {
                        "description": "The technical resources belonging to the controllable unit.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "description": "The surrogate key of the technical resource.",
                                    "format": "bigint",
                                    "type": "integer",
                                    "example": 17
                                },
                                "name": {
                                    "description": "The name of the technical resource.",
                                    "format": "text",
                                    "type": "string",
                                    "example": "Battery Unit A"
                                },
                                "details": {
                                    "description": "Additional details about the technical resource.",
                                    "format": "text",
                                    "type": "string",
                                    "example": "16A"
                                }
                            },
                            "required": [
                                "id",
                                "name"
                            ]
                        }
                    }
                },
                "required": [
                    "id",
                    "business_id",
                    "name",
                    "accounting_point_id",
                    "end_user_id",
                    "technical_resources"
                ]
            },
            "empty_object": {
                "description": "An empty object",
                "type": "object",
                "properties": {},
                "additionalProperties": false
            },
            "controllable_unit_status": {
                "description": "The status of the controllable unit.",
                "format": "text",
                "type": "string",
                "enum": [
                    "new",
                    "active",
                    "suspended",
                    "terminated"
                ],
                "example": "active"
            },
            "controllable_unit_regulation_direction": {
                "description": "The regulation direction of the controllable unit. `up` means it can be used to increase production or decrease consumption, while `down` means to decrease production or increase consumption.",
                "format": "text",
                "type": "string",
                "enum": [
                    "up",
                    "down",
                    "both"
                ],
                "example": "up"
            },
            "controllable_unit_grid_validation_status": {
                "description": "The grid validation status of the controllable unit.",
                "format": "text",
                "type": "string",
                "enum": [
                    "pending",
                    "in_progress",
                    "incomplete_information",
                    "validated",
                    "validation_failed"
                ],
                "example": "validated"
            },
            "service_providing_group_status": {
                "description": "The status of the group.",
                "format": "text",
                "type": "string",
                "enum": [
                    "new",
                    "active",
                    "terminated"
                ],
                "example": "active"
            },
            "service_providing_group_grid_prequalification_status": {
                "description": "The status of the grid prequalification for this service providing group.",
                "format": "text",
                "type": "string",
                "enum": [
                    "requested",
                    "in_progress",
                    "conditionally_approved",
                    "approved",
                    "not_approved"
                ],
                "example": "in_progress"
            },
            "party_business_id_type": {
                "description": "The type of the business identifier.",
                "format": "text",
                "type": "string",
                "enum": [
                    "gln",
                    "uuid",
                    "eic_x"
                ],
                "example": "gln"
            },
            "party_status": {
                "description": "The status of the party.",
                "format": "text",
                "type": "string",
                "enum": [
                    "new",
                    "active",
                    "inactive",
                    "suspended",
                    "terminated"
                ],
                "example": "active"
            },
            "accounting_point_balance_responsible_party_energy_direction": {
                "description": "The direction of the effect on the balance that the BRP takes responsibility for.",
                "format": "text",
                "type": "string",
                "readOnly": true,
                "example": "consumption",
                "enum": [
                    "consumption",
                    "production"
                ]
            },
            "system_operator_product_type_status": {
                "description": "The status of the relation.",
                "format": "text",
                "type": "string",
                "enum": [
                    "active",
                    "inactive"
                ],
                "example": "active"
            },
            "service_provider_product_application_status": {
                "description": "The status of the application.",
                "format": "text",
                "type": "string",
                "enum": [
                    "requested",
                    "in_progress",
                    "communication_test",
                    "not_qualified",
                    "qualified"
                ],
                "example": "in_progress"
            },
            "service_provider_product_application_comment_visibility": {
                "description": "The level of visibility of the comment.",
                "format": "text",
                "type": "string",
                "enum": [
                    "same_party",
                    "same_party_type",
                    "any_party"
                ],
                "example": "same_party"
            },
            "service_providing_group_product_application_status": {
                "description": "The status of the application.",
                "format": "text",
                "type": "string",
                "enum": [
                    "requested",
                    "prequalification_pending",
                    "in_progress",
                    "temporary_qualified",
                    "prequalified",
                    "verified",
                    "rejected"
                ],
                "example": "in_progress"
            },
            "controllable_unit_update_request": {
                "summary": "Update - Controllable unit",
                "description": "Request schema for update operations - Controllable unit",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Free text name of the controllable unit.",
                        "format": "text",
                        "type": "string",
                        "maxLength": 512,
                        "example": "Car Charger #34"
                    },
                    "start_date": {
                        "description": "The usage date when the controllable unit is first active.",
                        "format": "date",
                        "type": "string",
                        "nullable": true,
                        "example": "2024-05-17"
                    },
                    "status": {
                        "$ref": "#/components/schemas/controllable_unit_status"
                    },
                    "regulation_direction": {
                        "$ref": "#/components/schemas/controllable_unit_regulation_direction"
                    },
                    "maximum_available_capacity": {
                        "description": "Maximum continuous active power that the controllable unit can produce or consume, i.e. deliver for balancing and congestion services, in kilowatts.",
                        "format": "decimal",
                        "type": "number",
                        "minimum": 0,
                        "maximum": 999999.999,
                        "multipleOf": 0.001,
                        "example": 3.5
                    },
                    "minimum_duration": {
                        "description": "The minimum activation duration in seconds.",
                        "format": "bigint",
                        "type": "integer",
                        "minimum": 0,
                        "nullable": true,
                        "example": 30
                    },
                    "maximum_duration": {
                        "description": "The maximum activation duration in seconds.",
                        "format": "bigint",
                        "type": "integer",
                        "minimum": 0,
                        "nullable": true,
                        "example": 1200
                    },
                    "recovery_duration": {
                        "description": "The minimum recovery duration between activations in seconds.",
                        "format": "bigint",
                        "type": "integer",
                        "minimum": 0,
                        "nullable": true,
                        "example": 3600
                    },
                    "ramp_rate": {
                        "description": "The rate of power per unit of time to reach empty or full power for the controllable unit, in kilowatts per minute.",
                        "type": "number",
                        "format": "decimal",
                        "minimum": 0.001,
                        "multipleOf": 0.001,
                        "nullable": true,
                        "example": 0.1
                    },
                    "grid_node_id": {
                        "description": "Reference to the node that the controllable unit is connected to.",
                        "format": "text",
                        "type": "string",
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                        "nullable": true,
                        "example": "53919b79-876f-4dad-8bde-b29368367604"
                    },
                    "grid_validation_status": {
                        "$ref": "#/components/schemas/controllable_unit_grid_validation_status"
                    },
                    "grid_validation_notes": {
                        "description": "Free text notes on the current grid validation status.",
                        "format": "text",
                        "type": "string",
                        "maxLength": 512,
                        "nullable": true,
                        "example": null
                    },
                    "last_validated": {
                        "description": "When the controllable unit was last validated.",
                        "format": "timestamp with time zone",
                        "type": "string",
                        "nullable": true,
                        "example": "2022-08-08 12:00:00 CET"
                    }
                }
            },
            "controllable_unit_create_request": {
                "summary": "Create - Controllable unit",
                "description": "Request schema for create operations - Controllable unit",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/controllable_unit_update_request"
                    },
                    {
                        "properties": {
                            "accounting_point_id": {
                                "description": "Reference to the accounting point that the controllable unit is connected to.",
                                "format": "bigint",
                                "type": "integer",
                                "nullable": false,
                                "example": 10289
                            }
                        }
                    },
                    {
                        "required": [
                            "name",
                            "status",
                            "regulation_direction",
                            "maximum_available_capacity",
                            "accounting_point_id",
                            "grid_validation_status"
                        ]
                    }
                ],
                "type": "object"
            },
            "controllable_unit_response": {
                "summary": "Response - Controllable unit",
                "description": "Response schema for operations with return values - Controllable unit",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/controllable_unit_create_request"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Unique surrogate key.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 12
                            },
                            "business_id": {
                                "description": "Unique business identifier for the controllable unit.",
                                "format": "text",
                                "type": "string",
                                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
                                "readOnly": true,
                                "example": "53919b79-876f-4dad-8bde-b29368367604"
                            },
                            "is_small": {
                                "description": "Whether the controllable unit is small or not, following NCDR.",
                                "format": "boolean",
                                "type": "boolean",
                                "readOnly": true,
                                "example": true
                            },
                            "recorded_at": {
                                "description": "When the resource was recorded (created or updated) in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "example": "2023-12-31 23:59:00 CET"
                            },
                            "recorded_by": {
                                "description": "The identity that recorded the resource.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 145
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "controllable_unit_service_provider_update_request": {
                "summary": "Update - Relation between controllable unit and service provider",
                "description": "Request schema for update operations - Relation between controllable unit and service provider",
                "type": "object",
                "properties": {
                    "contract_reference": {
                        "description": "The service providers internal reference to the contract with the end user. Typically an internal identifier to a stored document or consent record.",
                        "format": "text",
                        "type": "string",
                        "maxLength": 128,
                        "nullable": false,
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "valid_from": {
                        "description": "The date from which the relation between the controllable unit and the service provider is valid. Midnight aligned on Norwegian timezone.",
                        "format": "timestamp with time zone",
                        "type": "string",
                        "nullable": true,
                        "example": "2022-08-08 00:00:00 CET"
                    },
                    "valid_to": {
                        "description": "The date until which the relation between the controllable unit and the service provider is valid. Midnight aligned on Norwegian timezone.",
                        "format": "timestamp with time zone",
                        "type": "string",
                        "nullable": true,
                        "example": "2022-09-10 00:00:00 CET"
                    }
                }
            },
            "controllable_unit_service_provider_create_request": {
                "summary": "Create - Relation between controllable unit and service provider",
                "description": "Request schema for create operations - Relation between controllable unit and service provider",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/controllable_unit_service_provider_update_request"
                    },
                    {
                        "properties": {
                            "controllable_unit_id": {
                                "description": "Reference to the controllable unit this relation links to a service provider.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 2
                            },
                            "service_provider_id": {
                                "description": "Reference to the `party` (service provider) this relation links to a controllable unit.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 78
                            },
                            "end_user_id": {
                                "description": "Technical ID of the end user behind the accounting point.",
                                "format": "bigint",
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "required": [
                            "controllable_unit_id",
                            "service_provider_id",
                            "end_user_id",
                            "contract_reference"
                        ]
                    }
                ],
                "type": "object"
            },
            "controllable_unit_service_provider_response": {
                "summary": "Response - Relation between controllable unit and service provider",
                "description": "Response schema for operations with return values - Relation between controllable unit and service provider",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/controllable_unit_service_provider_create_request"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Unique surrogate key.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 7
                            },
                            "recorded_at": {
                                "description": "When the resource was recorded (created or updated) in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "example": "2023-12-31 23:59:00 CET"
                            },
                            "recorded_by": {
                                "description": "The identity that recorded the resource.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 145
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "service_providing_group_update_request": {
                "summary": "Update - Service providing group",
                "description": "Request schema for update operations - Group of controllable units",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Free text name of the service providing group.",
                        "format": "text",
                        "type": "string",
                        "maxLength": 128,
                        "example": "Batteries #09"
                    },
                    "status": {
                        "$ref": "#/components/schemas/service_providing_group_status"
                    }
                }
            },
            "service_providing_group_create_request": {
                "summary": "Create - Service providing group",
                "description": "Request schema for create operations - Group of controllable units",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/service_providing_group_update_request"
                    },
                    {
                        "properties": {
                            "service_provider_id": {
                                "description": "Reference to the `party` (service provider) managing the group.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 17
                            }
                        }
                    },
                    {
                        "required": [
                            "name",
                            "service_provider_id",
                            "status"
                        ]
                    }
                ],
                "type": "object"
            },
            "service_providing_group_response": {
                "summary": "Response - Service providing group",
                "description": "Response schema for operations with return values - Group of controllable units",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/service_providing_group_create_request"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Unique surrogate key.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 4
                            },
                            "recorded_at": {
                                "description": "When the resource was recorded (created or updated) in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "example": "2023-12-31 23:59:00 CET"
                            },
                            "recorded_by": {
                                "description": "The identity that recorded the resource.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 145
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "service_providing_group_membership_update_request": {
                "summary": "Update - Membership relation of controllable unit in service providing group",
                "description": "Request schema for update operations - Membership relation of controllable unit in service providing group",
                "type": "object",
                "properties": {
                    "valid_from": {
                        "description": "The date from which the relation between the controllable unit and the service providing group is valid. Midnight aligned on Norwegian timezone.",
                        "format": "timestamp with time zone",
                        "type": "string",
                        "example": "2022-08-08 00:00:00 CET"
                    },
                    "valid_to": {
                        "description": "The date until which the relation between the controllable unit and the service providing group is valid. Midnight aligned on Norwegian timezone.",
                        "format": "timestamp with time zone",
                        "type": "string",
                        "nullable": true,
                        "example": null
                    }
                }
            },
            "service_providing_group_membership_create_request": {
                "summary": "Create - Membership relation of controllable unit in service providing group",
                "description": "Request schema for create operations - Membership relation of controllable unit in service providing group",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/service_providing_group_membership_update_request"
                    },
                    {
                        "properties": {
                            "controllable_unit_id": {
                                "description": "Reference to the controllable unit this relation links to a service providing group.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 6
                            },
                            "service_providing_group_id": {
                                "description": "Reference to the service providing group this relation links to a controllable unit.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 55
                            }
                        }
                    },
                    {
                        "required": [
                            "controllable_unit_id",
                            "service_providing_group_id",
                            "valid_from"
                        ]
                    }
                ],
                "type": "object"
            },
            "service_providing_group_membership_response": {
                "summary": "Response - Membership relation of controllable unit in service providing group",
                "description": "Response schema for operations with return values - Membership relation of controllable unit in service providing group",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/service_providing_group_membership_create_request"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Unique surrogate key.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 27
                            },
                            "recorded_at": {
                                "description": "When the resource was recorded (created or updated) in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "example": "2023-12-31 23:59:00 CET"
                            },
                            "recorded_by": {
                                "description": "The identity that recorded the resource.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 145
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "service_providing_group_grid_prequalification_update_request": {
                "summary": "Update - Grid prequalification for service providing group",
                "description": "Request schema for update operations - Grid prequalification for service providing group",
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/service_providing_group_grid_prequalification_status"
                    },
                    "notes": {
                        "description": "Free text notes on the current prequalification status.",
                        "format": "text",
                        "type": "string",
                        "maxLength": 512,
                        "nullable": true,
                        "example": null
                    },
                    "last_prequalified": {
                        "description": "When the current grid prequalification was last approved.",
                        "format": "timestamp with time zone",
                        "type": "string",
                        "nullable": true,
                        "example": "2023-01-08 10:00:00 CET"
                    }
                }
            },
            "service_providing_group_grid_prequalification_create_request": {
                "summary": "Create - Grid prequalification for service providing group",
                "description": "Request schema for create operations - Grid prequalification for service providing group",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/service_providing_group_grid_prequalification_update_request"
                    },
                    {
                        "properties": {
                            "service_providing_group_id": {
                                "description": "Reference to the service providing group whose grid prequalification is tracked by the current resource.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 55
                            },
                            "impacted_system_operator_id": {
                                "description": "Reference to the `party` that is the impacted system operator.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 7
                            }
                        }
                    },
                    {
                        "required": [
                            "service_providing_group_id",
                            "impacted_system_operator_id",
                            "status"
                        ]
                    }
                ],
                "type": "object"
            },
            "service_providing_group_grid_prequalification_response": {
                "summary": "Response - Grid prequalification for service providing group",
                "description": "Response schema for operations with return values - Grid prequalification for service providing group",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/service_providing_group_grid_prequalification_create_request"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Unique surrogate key.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 27
                            },
                            "recorded_at": {
                                "description": "When the resource was recorded (created or updated) in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "example": "2023-12-31 23:59:00 CET"
                            },
                            "recorded_by": {
                                "description": "The identity that recorded the resource.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 145
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "entity_update_request": {
                "summary": "Update - Entity",
                "description": "Request schema for update operations - Entity - Natural or legal person\n\nAn entity is a natural or legal person that can be a party in the Flexibility Information System.\n\nExample entity types:\n\n* Person\n* Organisation",
                "type": "object"
            },
            "entity_response": {
                "summary": "Response - Entity",
                "description": "Response schema for operations with return values - Entity - Natural or legal person\n\nAn entity is a natural or legal person that can be a party in the Flexibility Information System.\n\nExample entity types:\n\n* Person\n* Organisation",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/entity_update_request"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Unique surrogate identifier.\n\nNote:\nThis is a Primary Key.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 14
                            },
                            "business_id": {
                                "description": "The business identifier of the entity. Format depends on `business_id_type`.",
                                "format": "text",
                                "type": "string",
                                "readOnly": true,
                                "example": "13370000000"
                            },
                            "business_id_type": {
                                "description": "The type of the business identifier.",
                                "format": "text",
                                "type": "string",
                                "readOnly": true,
                                "example": "pid"
                            },
                            "name": {
                                "description": "Name of the entity. Maximum 128 characters.",
                                "format": "text",
                                "type": "string",
                                "readOnly": true,
                                "example": "John Smith"
                            },
                            "type": {
                                "description": "The type of the entity, e.g Person, Organisation",
                                "format": "text",
                                "type": "string",
                                "readOnly": true,
                                "example": "person"
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "entity_client_update_request": {
                "summary": "Update - Entity client",
                "description": "Request schema for update operations - Client linked to an entity for client credentials and JWT grant authentication methods.",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Name of the client.",
                        "format": "text",
                        "type": "string",
                        "maxLength": 256,
                        "nullable": true,
                        "example": "Laptop"
                    },
                    "client_id": {
                        "description": "The identifier of the entity. For use with client credentials authentication method.",
                        "format": "text",
                        "type": "string",
                        "example": "addr@flex.test"
                    },
                    "client_secret": {
                        "description": "The secret of the entity. For use with client credentials authentication method. Input as plain text but stored encrypted.",
                        "format": "text",
                        "type": "string",
                        "minLength": 12,
                        "nullable": true,
                        "example": "mysupersecretpassword"
                    },
                    "public_key": {
                        "description": "The public key of the entity (X.509 SubjectPublicKeyInfo). For use with JWT grant authentication method.",
                        "format": "text",
                        "type": "string",
                        "nullable": true,
                        "pattern": "^-----BEGIN PUBLIC KEY-----\\nMIIB[-A-Za-z0-9+/\\n]*={0,3}\\n-----END PUBLIC KEY-----$",
                        "example": "-----BEGIN PUBLIC KEY-----\nMIIBojANBgkqhkiG9w0BAQEFAAOCAY8AMIIBigKCAYEAq3DnhgYgLVJknvDA3clA\nTozPtjI7yauqD/ZuqgZn4KzzzkQ4BzJar4jRygpzbghlFn0Luk1mdVKzPUgYj0V\nkbRlHyYfxahbgOHixOOnXkKXrtZW7yWGjXPqy/ZJ/+kFBNPAzxy7fDuAzKfU3Rn5\n0sBakg95pua14W1oE4rtd4/U+sg2maCq6HgGdCLLxRWwXA8IBtvHZ48i6kxiz9tu\n-----END PUBLIC KEY-----"
                    }
                }
            },
            "entity_client_create_request": {
                "summary": "Create - Entity client",
                "description": "Request schema for create operations - Client linked to an entity for client credentials and JWT grant authentication methods.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/entity_client_update_request"
                    },
                    {
                        "properties": {
                            "entity_id": {
                                "description": "Reference to the entity that this client is attached to.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 30
                            }
                        }
                    },
                    {
                        "required": [
                            "entity_id",
                            "client_id"
                        ]
                    }
                ],
                "type": "object"
            },
            "entity_client_response": {
                "summary": "Response - Entity client",
                "description": "Response schema for operations with return values - Client linked to an entity for client credentials and JWT grant authentication methods.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/entity_client_create_request"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Unique surrogate identifier.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 14
                            },
                            "recorded_at": {
                                "description": "When the resource was recorded (created or updated) in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "example": "2023-12-31 23:59:00 CET"
                            },
                            "recorded_by": {
                                "description": "The identity that recorded the resource.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 145
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "party_update_request": {
                "summary": "Update - Party",
                "description": "Request schema for update operations - The body that interacts with the Flexibility Information System\n\nA party is the thing that is authorized to access or modify data in the Flexiblity Information System.\n\nExample party types:\n\n* Service Provider\n* System Operator\n* End User",
                "type": "object",
                "properties": {
                    "business_id_type": {
                        "$ref": "#/components/schemas/party_business_id_type"
                    },
                    "name": {
                        "description": "Name of the party. Maximum 128 characters.",
                        "format": "text",
                        "type": "string",
                        "example": "Flex Energy Supplier"
                    },
                    "status": {
                        "$ref": "#/components/schemas/party_status"
                    }
                }
            },
            "party_create_request": {
                "summary": "Create - Party",
                "description": "Request schema for create operations - The body that interacts with the Flexibility Information System\n\nA party is the thing that is authorized to access or modify data in the Flexiblity Information System.\n\nExample party types:\n\n* Service Provider\n* System Operator\n* End User",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/party_update_request"
                    },
                    {
                        "properties": {
                            "business_id": {
                                "description": "The business identifier of the party. Format depends on `business_id_type`.",
                                "format": "text",
                                "type": "string",
                                "example": "1337099000000"
                            },
                            "entity_id": {
                                "description": "Reference to the entity that is the parent of the party.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 30
                            },
                            "role": {
                                "description": "The role of the party. Currently maps to 1:1 to `type`. E.g. system_operator, service_provider.",
                                "format": "text",
                                "type": "string",
                                "example": "flex_energy_supplier"
                            },
                            "type": {
                                "description": "The type of the party, e.g SystemOperator, ServiceProvider",
                                "format": "text",
                                "type": "string",
                                "example": "energy_supplier"
                            }
                        }
                    },
                    {
                        "required": [
                            "business_id_type",
                            "entity_id",
                            "name",
                            "role",
                            "type",
                            "status"
                        ]
                    }
                ],
                "type": "object"
            },
            "party_response": {
                "summary": "Response - Party",
                "description": "Response schema for operations with return values - The body that interacts with the Flexibility Information System\n\nA party is the thing that is authorized to access or modify data in the Flexiblity Information System.\n\nExample party types:\n\n* Service Provider\n* System Operator\n* End User",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/party_create_request"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Unique surrogate identifier.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 11
                            },
                            "recorded_at": {
                                "description": "When the resource was recorded (created or updated) in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "example": "2023-12-31 23:59:00 CET"
                            },
                            "recorded_by": {
                                "description": "The identity that recorded the resource.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 145
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "party_membership_update_request": {
                "summary": "Update - Party Membership",
                "description": "Request schema for update operations - The relation between a party and entity.",
                "type": "object"
            },
            "party_membership_create_request": {
                "summary": "Create - Party Membership",
                "description": "Request schema for create operations - The relation between a party and entity.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/party_membership_update_request"
                    },
                    {
                        "properties": {
                            "party_id": {
                                "description": "Reference to the party that the membership links to an entity.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 379
                            },
                            "entity_id": {
                                "description": "Reference to the entity that the party represents.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 30
                            }
                        }
                    },
                    {
                        "required": [
                            "party_id",
                            "entity_id"
                        ]
                    }
                ],
                "type": "object"
            },
            "party_membership_response": {
                "summary": "Response - Party Membership",
                "description": "Response schema for operations with return values - The relation between a party and entity.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/party_membership_create_request"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Unique surrogate identifier.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 44
                            },
                            "recorded_at": {
                                "description": "When the resource was recorded (created or updated) in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "example": "2023-12-31 23:59:00 CET"
                            },
                            "recorded_by": {
                                "description": "The identity that recorded the resource.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 145
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "identity_update_request": {
                "summary": "Update - Identity",
                "description": "Request schema for update operations - Resource uniquely identifying a user by linking its entity and the potentially assumed party.",
                "type": "object"
            },
            "identity_response": {
                "summary": "Response - Identity",
                "description": "Response schema for operations with return values - Resource uniquely identifying a user by linking its entity and the potentially assumed party.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/identity_update_request"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Unique surrogate identifier.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 44
                            },
                            "entity_id": {
                                "description": "Reference to the entity using the identity.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 3
                            },
                            "entity_name": {
                                "description": "Name of the entity using the identity.",
                                "format": "text",
                                "type": "string",
                                "readOnly": true,
                                "example": "Martin Andersen"
                            },
                            "party_id": {
                                "description": "Reference to the party assumed by the entity.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "nullable": true,
                                "example": 17
                            },
                            "party_name": {
                                "description": "Name of the party assumed by the entity.",
                                "format": "text",
                                "type": "string",
                                "readOnly": true,
                                "nullable": true,
                                "example": "Andersen SO"
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "technical_resource_update_request": {
                "summary": "Update - Technical Resource",
                "description": "Request schema for update operations - Technical unit being part of a controllable unit.",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Name of the technical resource. Maximum 128 characters.",
                        "format": "text",
                        "type": "string",
                        "example": "Battery Unit #1"
                    },
                    "details": {
                        "description": "Free text details about the technical resource.",
                        "format": "text",
                        "type": "string",
                        "maxLength": 1024,
                        "nullable": true,
                        "example": "Make: ACME\nModel: Car Charger 3000"
                    }
                }
            },
            "technical_resource_create_request": {
                "summary": "Create - Technical Resource",
                "description": "Request schema for create operations - Technical unit being part of a controllable unit.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/technical_resource_update_request"
                    },
                    {
                        "properties": {
                            "controllable_unit_id": {
                                "description": "Reference to the controllable unit that this technical resource belongs to.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 37
                            }
                        }
                    },
                    {
                        "required": [
                            "name",
                            "controllable_unit_id"
                        ]
                    }
                ],
                "type": "object"
            },
            "technical_resource_response": {
                "summary": "Response - Technical Resource",
                "description": "Response schema for operations with return values - Technical unit being part of a controllable unit.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/technical_resource_create_request"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Unique surrogate identifier.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 89
                            },
                            "recorded_at": {
                                "description": "When the resource was recorded (created or updated) in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "example": "2023-12-31 23:59:00 CET"
                            },
                            "recorded_by": {
                                "description": "The identity that recorded the resource.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 145
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "event_update_request": {
                "summary": "Update - Event",
                "description": "Request schema for update operations - Event happening in the system.",
                "type": "object"
            },
            "event_response": {
                "summary": "Response - Event",
                "description": "Response schema for operations with return values - Event happening in the system.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/event_update_request"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Unique surrogate identifier.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 89
                            },
                            "specversion": {
                                "description": "The version of the CloudEvents specification followed by the resource.",
                                "format": "text",
                                "type": "string",
                                "readOnly": true,
                                "example": "1.0"
                            },
                            "time": {
                                "description": "The time at which the event was generated.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "example": "2022-08-08 12:00:00 CET"
                            },
                            "type": {
                                "description": "The type of the event.",
                                "format": "text",
                                "type": "string",
                                "pattern": "^no.elhub.flex.",
                                "readOnly": true,
                                "example": "no.elhub.flex.service_providing_group.update"
                            },
                            "source": {
                                "description": "The URI of the resource concerned by the event.",
                                "format": "text",
                                "type": "string",
                                "pattern": "^(\\/([a-z][a-z_]*|[0-9]+))+$",
                                "readOnly": true,
                                "example": "/service_providing_group/4"
                            },
                            "data": {
                                "description": "The data of the event.",
                                "format": "text",
                                "type": "string",
                                "readOnly": true,
                                "nullable": true,
                                "example": null
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "notification_update_request": {
                "summary": "Update - Notification",
                "description": "Request schema for update operations - Notification about an event happening in the system.",
                "type": "object",
                "properties": {
                    "acknowledged": {
                        "description": "Whether the notification was acknowledged by the target user.",
                        "format": "boolean",
                        "type": "boolean",
                        "example": false
                    }
                }
            },
            "notification_response": {
                "summary": "Response - Notification",
                "description": "Response schema for operations with return values - Notification about an event happening in the system.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/notification_update_request"
                    },
                    {
                        "properties": {
                            "event_id": {
                                "description": "Reference to the event notified by this resource.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 37
                            },
                            "party_id": {
                                "description": "Reference to the party concerned by this notification.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 37
                            },
                            "id": {
                                "description": "Unique surrogate identifier.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 89
                            },
                            "recorded_at": {
                                "description": "When the resource was recorded (created or updated) in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "example": "2023-12-31 23:59:00 CET"
                            },
                            "recorded_by": {
                                "description": "The identity that recorded the resource.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 145
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "accounting_point_update_request": {
                "summary": "Update - Accounting Point",
                "description": "Request schema for update operations - Accounting point for a controllable unit.",
                "type": "object"
            },
            "accounting_point_response": {
                "summary": "Response - Accounting Point",
                "description": "Response schema for operations with return values - Accounting point for a controllable unit.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/accounting_point_update_request"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Unique surrogate identifier.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 89
                            },
                            "business_id": {
                                "description": "The GSRN metering point id of the accounting point.",
                                "format": "text",
                                "type": "string",
                                "readOnly": true,
                                "pattern": "^[1-9][0-9]{17}$",
                                "example": "709000000000000057"
                            },
                            "system_operator_id": {
                                "description": "The system operator of the accounting point.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true
                            },
                            "recorded_at": {
                                "description": "When the resource was recorded (created or updated) in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "example": "2023-12-31 23:59:00 CET"
                            },
                            "recorded_by": {
                                "description": "The identity that recorded the resource.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 145
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "accounting_point_balance_responsible_party_update_request": {
                "summary": "Update - Accounting Point Balance Responsible Party",
                "description": "Request schema for update operations - Relation linking a balance responsible party to an accounting point.",
                "type": "object",
                "properties": {
                    "energy_direction": {
                        "$ref": "#/components/schemas/accounting_point_balance_responsible_party_energy_direction"
                    }
                }
            },
            "accounting_point_balance_responsible_party_response": {
                "summary": "Response - Accounting Point Balance Responsible Party",
                "description": "Response schema for operations with return values - Relation linking a balance responsible party to an accounting point.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/accounting_point_balance_responsible_party_update_request"
                    },
                    {
                        "properties": {
                            "accounting_point_id": {
                                "description": "The ID of the accounting point.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 245
                            },
                            "balance_responsible_party_id": {
                                "description": "The balance responsible party of the accounting point.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 37,
                                "readOnly": true
                            },
                            "valid_from": {
                                "description": "The date from which the relation between the accounting point and the balance responsible party is valid. Midnight aligned on Norwegian timezone.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "example": "2022-08-08 00:00:00 CET"
                            },
                            "valid_to": {
                                "description": "The date until which the relation between the accounting point and the balance responsible party is valid. Midnight aligned on Norwegian timezone.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "nullable": true,
                                "example": null
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "accounting_point_energy_supplier_update_request": {
                "summary": "Update - Accounting Point Energy Supplier",
                "description": "Request schema for update operations - Relation linking an energy supplier to an accounting point.",
                "type": "object"
            },
            "accounting_point_energy_supplier_response": {
                "summary": "Response - Accounting Point Energy Supplier",
                "description": "Response schema for operations with return values - Relation linking an energy supplier to an accounting point.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/accounting_point_energy_supplier_update_request"
                    },
                    {
                        "properties": {
                            "accounting_point_id": {
                                "description": "The ID of the accounting point.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 45
                            },
                            "energy_supplier_id": {
                                "description": "The energy supplier of the accounting point.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 7,
                                "readOnly": true
                            },
                            "valid_from": {
                                "description": "The date from which the relation between the accounting point and the energy supplier is valid. Midnight aligned on Norwegian timezone.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "example": "2023-09-09 00:00:00 CET"
                            },
                            "valid_to": {
                                "description": "The date until which the relation between the accounting point and the energy supplier is valid. Midnight aligned on Norwegian timezone.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "nullable": true,
                                "example": null
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "product_type_update_request": {
                "summary": "Update - Product Type",
                "description": "Request schema for update operations - Product type.",
                "type": "object"
            },
            "product_type_response": {
                "summary": "Response - Product Type",
                "description": "Response schema for operations with return values - Product type.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/product_type_update_request"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Unique surrogate identifier.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 4
                            },
                            "business_id": {
                                "description": "The code for this product type.",
                                "format": "text",
                                "type": "string",
                                "readOnly": true,
                                "example": "manual_congestion"
                            },
                            "name": {
                                "description": "The name of the product type.",
                                "format": "text",
                                "type": "string",
                                "maxLength": 64,
                                "readOnly": true,
                                "example": "Manual Congestion"
                            },
                            "service": {
                                "description": "The service offered by the product type.",
                                "format": "text",
                                "type": "string",
                                "readOnly": true,
                                "example": "congestion management"
                            },
                            "products": {
                                "description": "Examples of products belonging to this product type.",
                                "format": "text",
                                "type": "string",
                                "readOnly": true,
                                "example": "LongFlex, ShortFlex"
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "system_operator_product_type_update_request": {
                "summary": "Update - System Operator Product Type",
                "description": "Request schema for update operations - Relation between a system operator and a product type they want to buy.",
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/system_operator_product_type_status"
                    }
                }
            },
            "system_operator_product_type_create_request": {
                "summary": "Create - System Operator Product Type",
                "description": "Request schema for create operations - Relation between a system operator and a product type they want to buy.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/system_operator_product_type_update_request"
                    },
                    {
                        "properties": {
                            "system_operator_id": {
                                "description": "Reference to the system operator.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 37
                            },
                            "product_type_id": {
                                "description": "Reference to the product type.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 8
                            }
                        }
                    },
                    {
                        "required": [
                            "system_operator_id",
                            "product_type_id",
                            "status"
                        ]
                    }
                ],
                "type": "object"
            },
            "system_operator_product_type_response": {
                "summary": "Response - System Operator Product Type",
                "description": "Response schema for operations with return values - Relation between a system operator and a product type they want to buy.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/system_operator_product_type_create_request"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Unique surrogate identifier.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 89
                            },
                            "recorded_at": {
                                "description": "When the resource was recorded (created or updated) in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "example": "2023-12-31 23:59:00 CET"
                            },
                            "recorded_by": {
                                "description": "The identity that recorded the resource.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 145
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "service_provider_product_application_update_request": {
                "summary": "Update - Service Provider Product Application",
                "description": "Request schema for update operations - Relation between a service provider and a system operator, for the SP to apply for delivering the SO some of the types of product they want to buy on a flexibility market.",
                "type": "object",
                "properties": {
                    "product_type_ids": {
                        "description": "References to the product types.",
                        "type": "array",
                        "items": {
                            "format": "bigint",
                            "type": "integer"
                        },
                        "example": [
                            2,
                            4,
                            5
                        ]
                    },
                    "status": {
                        "$ref": "#/components/schemas/service_provider_product_application_status"
                    },
                    "notes": {
                        "description": "Free text notes on the current product application status.",
                        "format": "text",
                        "type": "string",
                        "maxLength": 512,
                        "nullable": true,
                        "example": null
                    },
                    "last_qualified": {
                        "description": "When the product application was last validated.",
                        "format": "timestamp with time zone",
                        "type": "string",
                        "nullable": true,
                        "example": "2022-08-08 12:00:00 CET"
                    }
                }
            },
            "service_provider_product_application_create_request": {
                "summary": "Create - Service Provider Product Application",
                "description": "Request schema for create operations - Relation between a service provider and a system operator, for the SP to apply for delivering the SO some of the types of product they want to buy on a flexibility market.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/service_provider_product_application_update_request"
                    },
                    {
                        "properties": {
                            "service_provider_id": {
                                "description": "Reference to the service provider.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 18
                            },
                            "system_operator_id": {
                                "description": "Reference to the system operator.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 39
                            }
                        }
                    },
                    {
                        "required": [
                            "service_provider_id",
                            "system_operator_id",
                            "product_type_ids",
                            "status"
                        ]
                    }
                ],
                "type": "object"
            },
            "service_provider_product_application_response": {
                "summary": "Response - Service Provider Product Application",
                "description": "Response schema for operations with return values - Relation between a service provider and a system operator, for the SP to apply for delivering the SO some of the types of product they want to buy on a flexibility market.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/service_provider_product_application_create_request"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Unique surrogate identifier.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 89
                            },
                            "recorded_at": {
                                "description": "When the resource was recorded (created or updated) in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "example": "2023-12-31 23:59:00 CET"
                            },
                            "recorded_by": {
                                "description": "The identity that recorded the resource.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 145
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "service_provider_product_application_comment_update_request": {
                "summary": "Update - Service Provider Product Application Comment",
                "description": "Request schema for update operations - Comment made by a party involved in a service provider product application.",
                "type": "object",
                "properties": {
                    "visibility": {
                        "$ref": "#/components/schemas/service_provider_product_application_comment_visibility"
                    },
                    "content": {
                        "description": "Free text content of the comment.",
                        "format": "text",
                        "type": "string",
                        "maxLength": 2048,
                        "example": "Missing document."
                    }
                }
            },
            "service_provider_product_application_comment_create_request": {
                "summary": "Create - Service Provider Product Application Comment",
                "description": "Request schema for create operations - Comment made by a party involved in a service provider product application.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/service_provider_product_application_comment_update_request"
                    },
                    {
                        "properties": {
                            "service_provider_product_application_id": {
                                "description": "Reference to the service provider product application.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 7
                            }
                        }
                    },
                    {
                        "required": [
                            "service_provider_product_application_id",
                            "visibility",
                            "content"
                        ]
                    }
                ],
                "type": "object"
            },
            "service_provider_product_application_comment_response": {
                "summary": "Response - Service Provider Product Application Comment",
                "description": "Response schema for operations with return values - Comment made by a party involved in a service provider product application.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/service_provider_product_application_comment_create_request"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Unique surrogate identifier.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 9
                            },
                            "created_by": {
                                "description": "Reference to the identity that created the comment.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 94
                            },
                            "created_at": {
                                "description": "When the comment was added to the application.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "example": "2022-08-08 12:00:00 CET"
                            },
                            "recorded_at": {
                                "description": "When the resource was recorded (created or updated) in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "example": "2023-12-31 23:59:00 CET"
                            },
                            "recorded_by": {
                                "description": "The identity that recorded the resource.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 145
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "service_providing_group_product_application_update_request": {
                "summary": "Update - Service Providing Group Product Application",
                "description": "Request schema for update operations - Relation between a service providing group and a system operator for a product type, for the SPG to deliver a product to the SO later.",
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/service_providing_group_product_application_status"
                    },
                    "notes": {
                        "description": "Free text notes on the current product application status.",
                        "format": "text",
                        "type": "string",
                        "maxLength": 512,
                        "nullable": true,
                        "example": null
                    },
                    "last_prequalified": {
                        "description": "When the product application was last prequalified.",
                        "format": "timestamp with time zone",
                        "type": "string",
                        "nullable": true,
                        "example": "2022-08-08 12:00:00 CET"
                    },
                    "last_verified": {
                        "description": "When the product application was last verified.",
                        "format": "timestamp with time zone",
                        "type": "string",
                        "nullable": true,
                        "example": "2021-08-08 10:00:00 CET"
                    }
                }
            },
            "service_providing_group_product_application_create_request": {
                "summary": "Create - Service Providing Group Product Application",
                "description": "Request schema for create operations - Relation between a service providing group and a system operator for a product type, for the SPG to deliver a product to the SO later.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/service_providing_group_product_application_update_request"
                    },
                    {
                        "properties": {
                            "service_providing_group_id": {
                                "description": "Reference to the service providing group.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 18
                            },
                            "procuring_system_operator_id": {
                                "description": "Reference to the procuring system operator.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 39
                            },
                            "product_type_id": {
                                "description": "References to the product type.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 2
                            }
                        }
                    },
                    {
                        "required": [
                            "service_providing_group_id",
                            "procuring_system_operator_id",
                            "product_type_id",
                            "status"
                        ]
                    }
                ],
                "type": "object"
            },
            "service_providing_group_product_application_response": {
                "summary": "Response - Service Providing Group Product Application",
                "description": "Response schema for operations with return values - Relation between a service providing group and a system operator for a product type, for the SPG to deliver a product to the SO later.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/service_providing_group_product_application_create_request"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Unique surrogate identifier.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 89
                            },
                            "recorded_at": {
                                "description": "When the resource was recorded (created or updated) in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "readOnly": true,
                                "example": "2023-12-31 23:59:00 CET"
                            },
                            "recorded_by": {
                                "description": "The identity that recorded the resource.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 145
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "notice_update_request": {
                "summary": "Update - Notice",
                "description": "Request schema for update operations - Notice to users about various issues or actions expected from them.",
                "type": "object"
            },
            "notice_response": {
                "summary": "Response - Notice",
                "description": "Response schema for operations with return values - Notice to users about various issues or actions expected from them.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/notice_update_request"
                    },
                    {
                        "properties": {
                            "party_id": {
                                "description": "Reference to the party targeted by the notice.",
                                "format": "bigint",
                                "type": "integer",
                                "readOnly": true,
                                "example": 18
                            },
                            "type": {
                                "description": "The type of the notice.",
                                "format": "text",
                                "type": "string",
                                "pattern": "^no.elhub.flex.",
                                "readOnly": true,
                                "example": "no.elhub.flex.service_providing_group_membership.valid_time.outside_contract"
                            },
                            "source": {
                                "description": "The URI of the resource concerned by the event.",
                                "format": "text",
                                "type": "string",
                                "pattern": "^(\\/([a-z][a-z_]*|[0-9]+))+$",
                                "readOnly": true,
                                "example": "/service_providing_group_membership/4"
                            },
                            "data": {
                                "description": "The data of the notice. The format depends on the type of notice.",
                                "type": "object",
                                "oneOf": [
                                    {
                                        "properties": {
                                            "invalid_timeline": {
                                                "description": "Section of the resource's valid time that is not covered by a required contract.",
                                                "format": "text",
                                                "type": "string"
                                            }
                                        }
                                    },
                                    {
                                        "properties": {
                                            "missing_record": {
                                                "type": "object",
                                                "description": "Data of the record missing in the database."
                                            }
                                        }
                                    },
                                    {
                                        "properties": {
                                            "updated_fields": {
                                                "type": "object",
                                                "description": "Values of fields that have been updated in a later version of the resource."
                                            }
                                        }
                                    }
                                ],
                                "readOnly": true,
                                "nullable": true
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "controllable_unit_history_response": {
                "summary": "Controllable unit - history",
                "description": "Controllable unit - history",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/controllable_unit_response"
                    },
                    {
                        "properties": {
                            "controllable_unit_id": {
                                "description": "Reference to the resource that was updated.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 48
                            },
                            "replaced_by": {
                                "description": "The identity that updated the resource when it was replaced.",
                                "format": "bigint",
                                "type": "integer",
                                "nullable": true,
                                "example": 90
                            },
                            "replaced_at": {
                                "description": "When the resource was replaced in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "nullable": true,
                                "example": "2024-07-07 10:00:00 CET"
                            }
                        }
                    }
                ]
            },
            "controllable_unit_service_provider_history_response": {
                "summary": "Relation between controllable unit and service provider - history",
                "description": "Relation between controllable unit and service provider - history",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/controllable_unit_service_provider_response"
                    },
                    {
                        "properties": {
                            "controllable_unit_service_provider_id": {
                                "description": "Reference to the resource that was updated.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 48
                            },
                            "replaced_by": {
                                "description": "The identity that updated the resource when it was replaced.",
                                "format": "bigint",
                                "type": "integer",
                                "nullable": true,
                                "example": 90
                            },
                            "replaced_at": {
                                "description": "When the resource was replaced in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "nullable": true,
                                "example": "2024-07-07 10:00:00 CET"
                            }
                        }
                    }
                ]
            },
            "service_providing_group_history_response": {
                "summary": "Service providing group - history",
                "description": "Service providing group - history",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/service_providing_group_response"
                    },
                    {
                        "properties": {
                            "service_providing_group_id": {
                                "description": "Reference to the resource that was updated.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 48
                            },
                            "replaced_by": {
                                "description": "The identity that updated the resource when it was replaced.",
                                "format": "bigint",
                                "type": "integer",
                                "nullable": true,
                                "example": 90
                            },
                            "replaced_at": {
                                "description": "When the resource was replaced in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "nullable": true,
                                "example": "2024-07-07 10:00:00 CET"
                            }
                        }
                    }
                ]
            },
            "service_providing_group_membership_history_response": {
                "summary": "Membership relation of controllable unit in service providing group - history",
                "description": "Membership relation of controllable unit in service providing group - history",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/service_providing_group_membership_response"
                    },
                    {
                        "properties": {
                            "service_providing_group_membership_id": {
                                "description": "Reference to the resource that was updated.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 48
                            },
                            "replaced_by": {
                                "description": "The identity that updated the resource when it was replaced.",
                                "format": "bigint",
                                "type": "integer",
                                "nullable": true,
                                "example": 90
                            },
                            "replaced_at": {
                                "description": "When the resource was replaced in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "nullable": true,
                                "example": "2024-07-07 10:00:00 CET"
                            }
                        }
                    }
                ]
            },
            "service_providing_group_grid_prequalification_history_response": {
                "summary": "Grid prequalification for service providing group - history",
                "description": "Grid prequalification for service providing group - history",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/service_providing_group_grid_prequalification_response"
                    },
                    {
                        "properties": {
                            "service_providing_group_grid_prequalification_id": {
                                "description": "Reference to the resource that was updated.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 48
                            },
                            "replaced_by": {
                                "description": "The identity that updated the resource when it was replaced.",
                                "format": "bigint",
                                "type": "integer",
                                "nullable": true,
                                "example": 90
                            },
                            "replaced_at": {
                                "description": "When the resource was replaced in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "nullable": true,
                                "example": "2024-07-07 10:00:00 CET"
                            }
                        }
                    }
                ]
            },
            "party_history_response": {
                "summary": "Party - history",
                "description": "Party - history",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/party_response"
                    },
                    {
                        "properties": {
                            "party_id": {
                                "description": "Reference to the resource that was updated.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 48
                            },
                            "replaced_by": {
                                "description": "The identity that updated the resource when it was replaced.",
                                "format": "bigint",
                                "type": "integer",
                                "nullable": true,
                                "example": 90
                            },
                            "replaced_at": {
                                "description": "When the resource was replaced in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "nullable": true,
                                "example": "2024-07-07 10:00:00 CET"
                            }
                        }
                    }
                ]
            },
            "party_membership_history_response": {
                "summary": "Party Membership - history",
                "description": "Party Membership - history",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/party_membership_response"
                    },
                    {
                        "properties": {
                            "party_membership_id": {
                                "description": "Reference to the resource that was updated.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 48
                            },
                            "replaced_by": {
                                "description": "The identity that updated the resource when it was replaced.",
                                "format": "bigint",
                                "type": "integer",
                                "nullable": true,
                                "example": 90
                            },
                            "replaced_at": {
                                "description": "When the resource was replaced in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "nullable": true,
                                "example": "2024-07-07 10:00:00 CET"
                            }
                        }
                    }
                ]
            },
            "technical_resource_history_response": {
                "summary": "Technical Resource - history",
                "description": "Technical Resource - history",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/technical_resource_response"
                    },
                    {
                        "properties": {
                            "technical_resource_id": {
                                "description": "Reference to the resource that was updated.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 48
                            },
                            "replaced_by": {
                                "description": "The identity that updated the resource when it was replaced.",
                                "format": "bigint",
                                "type": "integer",
                                "nullable": true,
                                "example": 90
                            },
                            "replaced_at": {
                                "description": "When the resource was replaced in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "nullable": true,
                                "example": "2024-07-07 10:00:00 CET"
                            }
                        }
                    }
                ]
            },
            "system_operator_product_type_history_response": {
                "summary": "System Operator Product Type - history",
                "description": "System Operator Product Type - history",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/system_operator_product_type_response"
                    },
                    {
                        "properties": {
                            "system_operator_product_type_id": {
                                "description": "Reference to the resource that was updated.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 48
                            },
                            "replaced_by": {
                                "description": "The identity that updated the resource when it was replaced.",
                                "format": "bigint",
                                "type": "integer",
                                "nullable": true,
                                "example": 90
                            },
                            "replaced_at": {
                                "description": "When the resource was replaced in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "nullable": true,
                                "example": "2024-07-07 10:00:00 CET"
                            }
                        }
                    }
                ]
            },
            "service_provider_product_application_history_response": {
                "summary": "Service Provider Product Application - history",
                "description": "Service Provider Product Application - history",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/service_provider_product_application_response"
                    },
                    {
                        "properties": {
                            "service_provider_product_application_id": {
                                "description": "Reference to the resource that was updated.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 48
                            },
                            "replaced_by": {
                                "description": "The identity that updated the resource when it was replaced.",
                                "format": "bigint",
                                "type": "integer",
                                "nullable": true,
                                "example": 90
                            },
                            "replaced_at": {
                                "description": "When the resource was replaced in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "nullable": true,
                                "example": "2024-07-07 10:00:00 CET"
                            }
                        }
                    }
                ]
            },
            "service_provider_product_application_comment_history_response": {
                "summary": "Service Provider Product Application Comment - history",
                "description": "Service Provider Product Application Comment - history",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/service_provider_product_application_comment_response"
                    },
                    {
                        "properties": {
                            "service_provider_product_application_comment_id": {
                                "description": "Reference to the resource that was updated.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 48
                            },
                            "replaced_by": {
                                "description": "The identity that updated the resource when it was replaced.",
                                "format": "bigint",
                                "type": "integer",
                                "nullable": true,
                                "example": 90
                            },
                            "replaced_at": {
                                "description": "When the resource was replaced in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "nullable": true,
                                "example": "2024-07-07 10:00:00 CET"
                            }
                        }
                    }
                ]
            },
            "service_providing_group_product_application_history_response": {
                "summary": "Service Providing Group Product Application - history",
                "description": "Service Providing Group Product Application - history",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/service_providing_group_product_application_response"
                    },
                    {
                        "properties": {
                            "service_providing_group_product_application_id": {
                                "description": "Reference to the resource that was updated.",
                                "format": "bigint",
                                "type": "integer",
                                "example": 48
                            },
                            "replaced_by": {
                                "description": "The identity that updated the resource when it was replaced.",
                                "format": "bigint",
                                "type": "integer",
                                "nullable": true,
                                "example": 90
                            },
                            "replaced_at": {
                                "description": "When the resource was replaced in the system.",
                                "format": "timestamp with time zone",
                                "type": "string",
                                "nullable": true,
                                "example": "2024-07-07 10:00:00 CET"
                            }
                        }
                    }
                ]
            }
        }
    },
    "paths": {
        "/openapi.json": {
            "get": {
                "operationId": "read_openapi_json",
                "summary": "Read OpenAPI JSON Document",
                "description": "Introspection for the Flexibility Information System main API. The document is following the OpenAPI 3.1 spec.",
                "tags": [
                    "introspection"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/controllable_unit/lookup": {
            "post": {
                "operationId": "call_controllable_unit_lookup",
                "summary": "Call - Controllable unit lookup",
                "description": "Lookup a controllable unit from end user ID and business and/or accounting point ID.",
                "tags": [
                    "controllable_unit"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/controllable_unit_lookup_request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/controllable_unit_lookup_response"
                                    }
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/controllable_unit": {
            "summary": "Controllable unit",
            "description": "",
            "get": {
                "operationId": "list_controllable_unit",
                "summary": "List Controllable unit",
                "description": "",
                "tags": [
                    "controllable_unit"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate key.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the accounting point that the controllable unit is connected to.",
                        "name": "accounting_point_id"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "example": "eq.somename",
                        "description": "Free text name of the controllable unit."
                    },
                    {
                        "in": "query",
                        "name": "business_id",
                        "schema": {
                            "type": "string"
                        },
                        "example": "eq.somebusiness_id",
                        "description": "Unique business identifier for the controllable unit."
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/controllable_unit_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "operationId": "create_controllable_unit",
                "summary": "Create Controllable unit",
                "description": "",
                "tags": [
                    "controllable_unit"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/controllable_unit_create_request"
                            }
                        }
                    },
                    "description": "controllable_unit",
                    "required": false
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/controllable_unit_response"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/controllable_unit/{id}": {
            "summary": "Controllable unit - single",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14
                }
            ],
            "get": {
                "operationId": "read_controllable_unit",
                "summary": "Read Controllable unit",
                "description": "",
                "tags": [
                    "controllable_unit"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/controllable_unit_response"
                                }
                            }
                        },
                        "description": "OK",
                        "links": {
                            "accounting_point_id": {
                                "operationId": "read_accounting_point",
                                "parameters": {
                                    "path.id": "$response.body#/accounting_point_id"
                                },
                                "description": "The `accounting_point_id` value returned in the response can be used as the `id` parameter in `GET /accounting_point/{id}`."
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "operationId": "update_controllable_unit",
                "summary": "Update Controllable unit",
                "description": "",
                "tags": [
                    "controllable_unit"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/controllable_unit_update_request"
                            }
                        }
                    },
                    "description": "controllable_unit",
                    "required": true
                },
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    }
                }
            }
        },
        "/controllable_unit_history": {
            "summary": "Controllable unit - history",
            "description": "",
            "parameters": [
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the history record.",
                    "name": "id"
                },
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the Controllable unit whose history we want to inspect.",
                    "name": "controllable_unit_id"
                }
            ],
            "get": {
                "operationId": "list_controllable_unit_history",
                "summary": "List Controllable unit - history",
                "description": "",
                "tags": [
                    "controllable_unit"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate key.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the accounting point that the controllable unit is connected to.",
                        "name": "accounting_point_id"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "example": "eq.somename",
                        "description": "Free text name of the controllable unit."
                    },
                    {
                        "in": "query",
                        "name": "business_id",
                        "schema": {
                            "type": "string"
                        },
                        "example": "eq.somebusiness_id",
                        "description": "Unique business identifier for the controllable unit."
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/controllable_unit_history_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/controllable_unit_history/{id}": {
            "summary": "Controllable unit - history record",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14,
                    "description": "Identifier of the history record we want to inspect."
                }
            ],
            "get": {
                "operationId": "read_controllable_unit_history",
                "summary": "Read Controllable unit - history",
                "description": "",
                "tags": [
                    "controllable_unit"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/controllable_unit_history_response"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/controllable_unit_service_provider": {
            "summary": "Relation between controllable unit and service provider",
            "description": "",
            "get": {
                "operationId": "list_controllable_unit_service_provider",
                "summary": "List Relation between controllable unit and service provider",
                "description": "",
                "tags": [
                    "controllable_unit_service_provider"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate key.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the controllable unit this relation links to a service provider.",
                        "name": "controllable_unit_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the `party` (service provider) this relation links to a controllable unit.",
                        "name": "service_provider_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Technical ID of the end user behind the accounting point.",
                        "name": "end_user_id"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/controllable_unit_service_provider_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "operationId": "create_controllable_unit_service_provider",
                "summary": "Create Relation between controllable unit and service provider",
                "description": "",
                "tags": [
                    "controllable_unit_service_provider"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/controllable_unit_service_provider_create_request"
                            }
                        }
                    },
                    "description": "controllable_unit_service_provider",
                    "required": false
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/controllable_unit_service_provider_response"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/controllable_unit_service_provider/{id}": {
            "summary": "Relation between controllable unit and service provider - single",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14
                }
            ],
            "get": {
                "operationId": "read_controllable_unit_service_provider",
                "summary": "Read Relation between controllable unit and service provider",
                "description": "",
                "tags": [
                    "controllable_unit_service_provider"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/controllable_unit_service_provider_response"
                                }
                            }
                        },
                        "description": "OK",
                        "links": {
                            "controllable_unit_id": {
                                "operationId": "read_controllable_unit",
                                "parameters": {
                                    "path.id": "$response.body#/controllable_unit_id"
                                },
                                "description": "The `controllable_unit_id` value returned in the response can be used as the `id` parameter in `GET /controllable_unit/{id}`."
                            },
                            "service_provider_id": {
                                "operationId": "read_party",
                                "parameters": {
                                    "path.id": "$response.body#/service_provider_id"
                                },
                                "description": "The `service_provider_id` value returned in the response can be used as the `id` parameter in `GET /party/{id}`."
                            },
                            "end_user_id": {
                                "operationId": "read_party",
                                "parameters": {
                                    "path.id": "$response.body#/end_user_id"
                                },
                                "description": "The `end_user_id` value returned in the response can be used as the `id` parameter in `GET /party/{id}`."
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "operationId": "update_controllable_unit_service_provider",
                "summary": "Update Relation between controllable unit and service provider",
                "description": "",
                "tags": [
                    "controllable_unit_service_provider"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/controllable_unit_service_provider_update_request"
                            }
                        }
                    },
                    "description": "controllable_unit_service_provider",
                    "required": true
                },
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    }
                }
            },
            "delete": {
                "operationId": "delete_controllable_unit_service_provider",
                "summary": "Delete Relation between controllable unit and service provider",
                "description": "",
                "tags": [
                    "controllable_unit_service_provider"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/empty_object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    }
                }
            }
        },
        "/controllable_unit_service_provider_history": {
            "summary": "Relation between controllable unit and service provider - history",
            "description": "",
            "parameters": [
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the history record.",
                    "name": "id"
                },
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the Relation between controllable unit and service provider whose history we want to inspect.",
                    "name": "controllable_unit_service_provider_id"
                }
            ],
            "get": {
                "operationId": "list_controllable_unit_service_provider_history",
                "summary": "List Relation between controllable unit and service provider - history",
                "description": "",
                "tags": [
                    "controllable_unit_service_provider"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate key.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the controllable unit this relation links to a service provider.",
                        "name": "controllable_unit_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the `party` (service provider) this relation links to a controllable unit.",
                        "name": "service_provider_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Technical ID of the end user behind the accounting point.",
                        "name": "end_user_id"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/controllable_unit_service_provider_history_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/controllable_unit_service_provider_history/{id}": {
            "summary": "Relation between controllable unit and service provider - history record",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14,
                    "description": "Identifier of the history record we want to inspect."
                }
            ],
            "get": {
                "operationId": "read_controllable_unit_service_provider_history",
                "summary": "Read Relation between controllable unit and service provider - history",
                "description": "",
                "tags": [
                    "controllable_unit_service_provider"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/controllable_unit_service_provider_history_response"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/service_providing_group": {
            "summary": "Service providing group",
            "description": "",
            "get": {
                "operationId": "list_service_providing_group",
                "summary": "List Service providing group",
                "description": "",
                "tags": [
                    "service_providing_group"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate key.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the `party` (service provider) managing the group.",
                        "name": "service_provider_id"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "example": "eq.somename",
                        "description": "Free text name of the service providing group."
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/service_providing_group_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "operationId": "create_service_providing_group",
                "summary": "Create Service providing group",
                "description": "",
                "tags": [
                    "service_providing_group"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/service_providing_group_create_request"
                            }
                        }
                    },
                    "description": "service_providing_group",
                    "required": false
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_providing_group_response"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/service_providing_group/{id}": {
            "summary": "Service providing group - single",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14
                }
            ],
            "get": {
                "operationId": "read_service_providing_group",
                "summary": "Read Service providing group",
                "description": "",
                "tags": [
                    "service_providing_group"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_providing_group_response"
                                }
                            }
                        },
                        "description": "OK",
                        "links": {
                            "service_provider_id": {
                                "operationId": "read_party",
                                "parameters": {
                                    "path.id": "$response.body#/service_provider_id"
                                },
                                "description": "The `service_provider_id` value returned in the response can be used as the `id` parameter in `GET /party/{id}`."
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "operationId": "update_service_providing_group",
                "summary": "Update Service providing group",
                "description": "",
                "tags": [
                    "service_providing_group"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/service_providing_group_update_request"
                            }
                        }
                    },
                    "description": "service_providing_group",
                    "required": true
                },
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    }
                }
            }
        },
        "/service_providing_group_history": {
            "summary": "Service providing group - history",
            "description": "",
            "parameters": [
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the history record.",
                    "name": "id"
                },
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the Service providing group whose history we want to inspect.",
                    "name": "service_providing_group_id"
                }
            ],
            "get": {
                "operationId": "list_service_providing_group_history",
                "summary": "List Service providing group - history",
                "description": "",
                "tags": [
                    "service_providing_group"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate key.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the `party` (service provider) managing the group.",
                        "name": "service_provider_id"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "example": "eq.somename",
                        "description": "Free text name of the service providing group."
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/service_providing_group_history_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/service_providing_group_history/{id}": {
            "summary": "Service providing group - history record",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14,
                    "description": "Identifier of the history record we want to inspect."
                }
            ],
            "get": {
                "operationId": "read_service_providing_group_history",
                "summary": "Read Service providing group - history",
                "description": "",
                "tags": [
                    "service_providing_group"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_providing_group_history_response"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/service_providing_group_membership": {
            "summary": "Membership relation of controllable unit in service providing group",
            "description": "",
            "get": {
                "operationId": "list_service_providing_group_membership",
                "summary": "List Membership relation of controllable unit in service providing group",
                "description": "",
                "tags": [
                    "service_providing_group_membership"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate key.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the controllable unit this relation links to a service providing group.",
                        "name": "controllable_unit_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the service providing group this relation links to a controllable unit.",
                        "name": "service_providing_group_id"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/service_providing_group_membership_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "operationId": "create_service_providing_group_membership",
                "summary": "Create Membership relation of controllable unit in service providing group",
                "description": "",
                "tags": [
                    "service_providing_group_membership"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/service_providing_group_membership_create_request"
                            }
                        }
                    },
                    "description": "service_providing_group_membership",
                    "required": false
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_providing_group_membership_response"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/service_providing_group_membership/{id}": {
            "summary": "Membership relation of controllable unit in service providing group - single",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14
                }
            ],
            "get": {
                "operationId": "read_service_providing_group_membership",
                "summary": "Read Membership relation of controllable unit in service providing group",
                "description": "",
                "tags": [
                    "service_providing_group_membership"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_providing_group_membership_response"
                                }
                            }
                        },
                        "description": "OK",
                        "links": {
                            "controllable_unit_id": {
                                "operationId": "read_controllable_unit",
                                "parameters": {
                                    "path.id": "$response.body#/controllable_unit_id"
                                },
                                "description": "The `controllable_unit_id` value returned in the response can be used as the `id` parameter in `GET /controllable_unit/{id}`."
                            },
                            "service_providing_group_id": {
                                "operationId": "read_service_providing_group",
                                "parameters": {
                                    "path.id": "$response.body#/service_providing_group_id"
                                },
                                "description": "The `service_providing_group_id` value returned in the response can be used as the `id` parameter in `GET /service_providing_group/{id}`."
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "operationId": "update_service_providing_group_membership",
                "summary": "Update Membership relation of controllable unit in service providing group",
                "description": "",
                "tags": [
                    "service_providing_group_membership"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/service_providing_group_membership_update_request"
                            }
                        }
                    },
                    "description": "service_providing_group_membership",
                    "required": true
                },
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    }
                }
            },
            "delete": {
                "operationId": "delete_service_providing_group_membership",
                "summary": "Delete Membership relation of controllable unit in service providing group",
                "description": "",
                "tags": [
                    "service_providing_group_membership"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/empty_object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    }
                }
            }
        },
        "/service_providing_group_membership_history": {
            "summary": "Membership relation of controllable unit in service providing group - history",
            "description": "",
            "parameters": [
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the history record.",
                    "name": "id"
                },
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the Membership relation of controllable unit in service providing group whose history we want to inspect.",
                    "name": "service_providing_group_membership_id"
                }
            ],
            "get": {
                "operationId": "list_service_providing_group_membership_history",
                "summary": "List Membership relation of controllable unit in service providing group - history",
                "description": "",
                "tags": [
                    "service_providing_group_membership"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate key.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the controllable unit this relation links to a service providing group.",
                        "name": "controllable_unit_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the service providing group this relation links to a controllable unit.",
                        "name": "service_providing_group_id"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/service_providing_group_membership_history_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/service_providing_group_membership_history/{id}": {
            "summary": "Membership relation of controllable unit in service providing group - history record",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14,
                    "description": "Identifier of the history record we want to inspect."
                }
            ],
            "get": {
                "operationId": "read_service_providing_group_membership_history",
                "summary": "Read Membership relation of controllable unit in service providing group - history",
                "description": "",
                "tags": [
                    "service_providing_group_membership"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_providing_group_membership_history_response"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/service_providing_group_grid_prequalification": {
            "summary": "Grid prequalification for service providing group",
            "description": "",
            "get": {
                "operationId": "list_service_providing_group_grid_prequalification",
                "summary": "List Grid prequalification for service providing group",
                "description": "",
                "tags": [
                    "service_providing_group_grid_prequalification"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate key.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the service providing group whose grid prequalification is tracked by the current resource.",
                        "name": "service_providing_group_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the `party` that is the impacted system operator.",
                        "name": "impacted_system_operator_id"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/service_providing_group_grid_prequalification_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "operationId": "create_service_providing_group_grid_prequalification",
                "summary": "Create Grid prequalification for service providing group",
                "description": "",
                "tags": [
                    "service_providing_group_grid_prequalification"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/service_providing_group_grid_prequalification_create_request"
                            }
                        }
                    },
                    "description": "service_providing_group_grid_prequalification",
                    "required": false
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_providing_group_grid_prequalification_response"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/service_providing_group_grid_prequalification/{id}": {
            "summary": "Grid prequalification for service providing group - single",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14
                }
            ],
            "get": {
                "operationId": "read_service_providing_group_grid_prequalification",
                "summary": "Read Grid prequalification for service providing group",
                "description": "",
                "tags": [
                    "service_providing_group_grid_prequalification"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_providing_group_grid_prequalification_response"
                                }
                            }
                        },
                        "description": "OK",
                        "links": {
                            "service_providing_group_id": {
                                "operationId": "read_service_providing_group",
                                "parameters": {
                                    "path.id": "$response.body#/service_providing_group_id"
                                },
                                "description": "The `service_providing_group_id` value returned in the response can be used as the `id` parameter in `GET /service_providing_group/{id}`."
                            },
                            "impacted_system_operator_id": {
                                "operationId": "read_party",
                                "parameters": {
                                    "path.id": "$response.body#/impacted_system_operator_id"
                                },
                                "description": "The `impacted_system_operator_id` value returned in the response can be used as the `id` parameter in `GET /party/{id}`."
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "operationId": "update_service_providing_group_grid_prequalification",
                "summary": "Update Grid prequalification for service providing group",
                "description": "",
                "tags": [
                    "service_providing_group_grid_prequalification"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/service_providing_group_grid_prequalification_update_request"
                            }
                        }
                    },
                    "description": "service_providing_group_grid_prequalification",
                    "required": true
                },
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    }
                }
            }
        },
        "/service_providing_group_grid_prequalification_history": {
            "summary": "Grid prequalification for service providing group - history",
            "description": "",
            "parameters": [
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the history record.",
                    "name": "id"
                },
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the Grid prequalification for service providing group whose history we want to inspect.",
                    "name": "service_providing_group_grid_prequalification_id"
                }
            ],
            "get": {
                "operationId": "list_service_providing_group_grid_prequalification_history",
                "summary": "List Grid prequalification for service providing group - history",
                "description": "",
                "tags": [
                    "service_providing_group_grid_prequalification"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate key.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the service providing group whose grid prequalification is tracked by the current resource.",
                        "name": "service_providing_group_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the `party` that is the impacted system operator.",
                        "name": "impacted_system_operator_id"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/service_providing_group_grid_prequalification_history_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/service_providing_group_grid_prequalification_history/{id}": {
            "summary": "Grid prequalification for service providing group - history record",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14,
                    "description": "Identifier of the history record we want to inspect."
                }
            ],
            "get": {
                "operationId": "read_service_providing_group_grid_prequalification_history",
                "summary": "Read Grid prequalification for service providing group - history",
                "description": "",
                "tags": [
                    "service_providing_group_grid_prequalification"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_providing_group_grid_prequalification_history_response"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/entity": {
            "summary": "Entity",
            "description": "",
            "get": {
                "operationId": "list_entity",
                "summary": "List Entity",
                "description": "",
                "tags": [
                    "entity"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.\n\nNote:\nThis is a Primary Key.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "example": "eq.somename",
                        "description": "Name of the entity. Maximum 128 characters."
                    },
                    {
                        "in": "query",
                        "name": "business_id",
                        "schema": {
                            "type": "string"
                        },
                        "example": "eq.somebusiness_id",
                        "description": "The business identifier of the entity. Format depends on `business_id_type`."
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/entity_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/entity/{id}": {
            "summary": "Entity - single",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14
                }
            ],
            "get": {
                "operationId": "read_entity",
                "summary": "Read Entity",
                "description": "",
                "tags": [
                    "entity"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entity_response"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/entity_client": {
            "summary": "Entity client",
            "description": "",
            "get": {
                "operationId": "list_entity_client",
                "summary": "List Entity client",
                "description": "",
                "tags": [
                    "entity_client"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the entity that this client is attached to.",
                        "name": "entity_id"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "example": "eq.somename",
                        "description": "Name of the client."
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/entity_client_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "operationId": "create_entity_client",
                "summary": "Create Entity client",
                "description": "",
                "tags": [
                    "entity_client"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/entity_client_create_request"
                            }
                        }
                    },
                    "description": "entity_client",
                    "required": false
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entity_client_response"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/entity_client/{id}": {
            "summary": "Entity client - single",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14
                }
            ],
            "get": {
                "operationId": "read_entity_client",
                "summary": "Read Entity client",
                "description": "",
                "tags": [
                    "entity_client"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entity_client_response"
                                }
                            }
                        },
                        "description": "OK",
                        "links": {
                            "entity_id": {
                                "operationId": "read_entity",
                                "parameters": {
                                    "path.id": "$response.body#/entity_id"
                                },
                                "description": "The `entity_id` value returned in the response can be used as the `id` parameter in `GET /entity/{id}`."
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "operationId": "update_entity_client",
                "summary": "Update Entity client",
                "description": "",
                "tags": [
                    "entity_client"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/entity_client_update_request"
                            }
                        }
                    },
                    "description": "entity_client",
                    "required": true
                },
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    }
                }
            },
            "delete": {
                "operationId": "delete_entity_client",
                "summary": "Delete Entity client",
                "description": "",
                "tags": [
                    "entity_client"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/empty_object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    }
                }
            }
        },
        "/party": {
            "summary": "Party",
            "description": "",
            "get": {
                "operationId": "list_party",
                "summary": "List Party",
                "description": "",
                "tags": [
                    "party"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the entity that is the parent of the party.",
                        "name": "entity_id"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "example": "eq.somename",
                        "description": "Name of the party. Maximum 128 characters."
                    },
                    {
                        "in": "query",
                        "name": "business_id",
                        "schema": {
                            "type": "string"
                        },
                        "example": "eq.somebusiness_id",
                        "description": "The business identifier of the party. Format depends on `business_id_type`."
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/party_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "operationId": "create_party",
                "summary": "Create Party",
                "description": "",
                "tags": [
                    "party"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/party_create_request"
                            }
                        }
                    },
                    "description": "party",
                    "required": false
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/party_response"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/party/{id}": {
            "summary": "Party - single",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14
                }
            ],
            "get": {
                "operationId": "read_party",
                "summary": "Read Party",
                "description": "",
                "tags": [
                    "party"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/party_response"
                                }
                            }
                        },
                        "description": "OK",
                        "links": {
                            "entity_id": {
                                "operationId": "read_entity",
                                "parameters": {
                                    "path.id": "$response.body#/entity_id"
                                },
                                "description": "The `entity_id` value returned in the response can be used as the `id` parameter in `GET /entity/{id}`."
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "operationId": "update_party",
                "summary": "Update Party",
                "description": "",
                "tags": [
                    "party"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/party_update_request"
                            }
                        }
                    },
                    "description": "party",
                    "required": true
                },
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    }
                }
            }
        },
        "/party_history": {
            "summary": "Party - history",
            "description": "",
            "parameters": [
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the history record.",
                    "name": "id"
                },
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the Party whose history we want to inspect.",
                    "name": "party_id"
                }
            ],
            "get": {
                "operationId": "list_party_history",
                "summary": "List Party - history",
                "description": "",
                "tags": [
                    "party"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the entity that is the parent of the party.",
                        "name": "entity_id"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "example": "eq.somename",
                        "description": "Name of the party. Maximum 128 characters."
                    },
                    {
                        "in": "query",
                        "name": "business_id",
                        "schema": {
                            "type": "string"
                        },
                        "example": "eq.somebusiness_id",
                        "description": "The business identifier of the party. Format depends on `business_id_type`."
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/party_history_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/party_history/{id}": {
            "summary": "Party - history record",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14,
                    "description": "Identifier of the history record we want to inspect."
                }
            ],
            "get": {
                "operationId": "read_party_history",
                "summary": "Read Party - history",
                "description": "",
                "tags": [
                    "party"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/party_history_response"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/party_membership": {
            "summary": "Party Membership",
            "description": "",
            "get": {
                "operationId": "list_party_membership",
                "summary": "List Party Membership",
                "description": "",
                "tags": [
                    "party_membership"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the party that the membership links to an entity.",
                        "name": "party_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the entity that the party represents.",
                        "name": "entity_id"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/party_membership_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "operationId": "create_party_membership",
                "summary": "Create Party Membership",
                "description": "",
                "tags": [
                    "party_membership"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/party_membership_create_request"
                            }
                        }
                    },
                    "description": "party_membership",
                    "required": false
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/party_membership_response"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/party_membership/{id}": {
            "summary": "Party Membership - single",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14
                }
            ],
            "get": {
                "operationId": "read_party_membership",
                "summary": "Read Party Membership",
                "description": "",
                "tags": [
                    "party_membership"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/party_membership_response"
                                }
                            }
                        },
                        "description": "OK",
                        "links": {
                            "party_id": {
                                "operationId": "read_party",
                                "parameters": {
                                    "path.id": "$response.body#/party_id"
                                },
                                "description": "The `party_id` value returned in the response can be used as the `id` parameter in `GET /party/{id}`."
                            },
                            "entity_id": {
                                "operationId": "read_entity",
                                "parameters": {
                                    "path.id": "$response.body#/entity_id"
                                },
                                "description": "The `entity_id` value returned in the response can be used as the `id` parameter in `GET /entity/{id}`."
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "operationId": "delete_party_membership",
                "summary": "Delete Party Membership",
                "description": "",
                "tags": [
                    "party_membership"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/empty_object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    }
                }
            }
        },
        "/party_membership_history": {
            "summary": "Party Membership - history",
            "description": "",
            "parameters": [
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the history record.",
                    "name": "id"
                },
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the Party Membership whose history we want to inspect.",
                    "name": "party_membership_id"
                }
            ],
            "get": {
                "operationId": "list_party_membership_history",
                "summary": "List Party Membership - history",
                "description": "",
                "tags": [
                    "party_membership"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the party that the membership links to an entity.",
                        "name": "party_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the entity that the party represents.",
                        "name": "entity_id"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/party_membership_history_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/party_membership_history/{id}": {
            "summary": "Party Membership - history record",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14,
                    "description": "Identifier of the history record we want to inspect."
                }
            ],
            "get": {
                "operationId": "read_party_membership_history",
                "summary": "Read Party Membership - history",
                "description": "",
                "tags": [
                    "party_membership"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/party_membership_history_response"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/identity": {
            "summary": "Identity",
            "description": "",
            "get": {
                "operationId": "list_identity",
                "summary": "List Identity",
                "description": "",
                "tags": [
                    "identity"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the entity using the identity.",
                        "name": "entity_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Name of the entity using the identity.",
                        "name": "entity_name"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the party assumed by the entity.",
                        "name": "party_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Name of the party assumed by the entity.",
                        "name": "party_name"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/identity_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/identity/{id}": {
            "summary": "Identity - single",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14
                }
            ],
            "get": {
                "operationId": "read_identity",
                "summary": "Read Identity",
                "description": "",
                "tags": [
                    "identity"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/identity_response"
                                }
                            }
                        },
                        "description": "OK",
                        "links": {
                            "entity_id": {
                                "operationId": "read_entity",
                                "parameters": {
                                    "path.id": "$response.body#/entity_id"
                                },
                                "description": "The `entity_id` value returned in the response can be used as the `id` parameter in `GET /entity/{id}`."
                            },
                            "entity_name": {
                                "operationId": "read_entity",
                                "parameters": {
                                    "path.id": "$response.body#/entity_name"
                                },
                                "description": "The `entity_name` value returned in the response can be used as the `id` parameter in `GET /entity/{id}`."
                            },
                            "party_id": {
                                "operationId": "read_party",
                                "parameters": {
                                    "path.id": "$response.body#/party_id"
                                },
                                "description": "The `party_id` value returned in the response can be used as the `id` parameter in `GET /party/{id}`."
                            },
                            "party_name": {
                                "operationId": "read_party",
                                "parameters": {
                                    "path.id": "$response.body#/party_name"
                                },
                                "description": "The `party_name` value returned in the response can be used as the `id` parameter in `GET /party/{id}`."
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/technical_resource": {
            "summary": "Technical Resource",
            "description": "",
            "get": {
                "operationId": "list_technical_resource",
                "summary": "List Technical Resource",
                "description": "",
                "tags": [
                    "technical_resource"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the controllable unit that this technical resource belongs to.",
                        "name": "controllable_unit_id"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "example": "eq.somename",
                        "description": "Name of the technical resource. Maximum 128 characters."
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/technical_resource_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "operationId": "create_technical_resource",
                "summary": "Create Technical Resource",
                "description": "",
                "tags": [
                    "technical_resource"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/technical_resource_create_request"
                            }
                        }
                    },
                    "description": "technical_resource",
                    "required": false
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/technical_resource_response"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/technical_resource/{id}": {
            "summary": "Technical Resource - single",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14
                }
            ],
            "get": {
                "operationId": "read_technical_resource",
                "summary": "Read Technical Resource",
                "description": "",
                "tags": [
                    "technical_resource"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/technical_resource_response"
                                }
                            }
                        },
                        "description": "OK",
                        "links": {
                            "controllable_unit_id": {
                                "operationId": "read_controllable_unit",
                                "parameters": {
                                    "path.id": "$response.body#/controllable_unit_id"
                                },
                                "description": "The `controllable_unit_id` value returned in the response can be used as the `id` parameter in `GET /controllable_unit/{id}`."
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "operationId": "update_technical_resource",
                "summary": "Update Technical Resource",
                "description": "",
                "tags": [
                    "technical_resource"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/technical_resource_update_request"
                            }
                        }
                    },
                    "description": "technical_resource",
                    "required": true
                },
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    }
                }
            },
            "delete": {
                "operationId": "delete_technical_resource",
                "summary": "Delete Technical Resource",
                "description": "",
                "tags": [
                    "technical_resource"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/empty_object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    }
                }
            }
        },
        "/technical_resource_history": {
            "summary": "Technical Resource - history",
            "description": "",
            "parameters": [
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the history record.",
                    "name": "id"
                },
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the Technical Resource whose history we want to inspect.",
                    "name": "technical_resource_id"
                }
            ],
            "get": {
                "operationId": "list_technical_resource_history",
                "summary": "List Technical Resource - history",
                "description": "",
                "tags": [
                    "technical_resource"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the controllable unit that this technical resource belongs to.",
                        "name": "controllable_unit_id"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "example": "eq.somename",
                        "description": "Name of the technical resource. Maximum 128 characters."
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/technical_resource_history_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/technical_resource_history/{id}": {
            "summary": "Technical Resource - history record",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14,
                    "description": "Identifier of the history record we want to inspect."
                }
            ],
            "get": {
                "operationId": "read_technical_resource_history",
                "summary": "Read Technical Resource - history",
                "description": "",
                "tags": [
                    "technical_resource"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/technical_resource_history_response"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/event": {
            "summary": "Event",
            "description": "",
            "get": {
                "operationId": "list_event",
                "summary": "List Event",
                "description": "",
                "tags": [
                    "event"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/event_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/event/{id}": {
            "summary": "Event - single",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14
                }
            ],
            "get": {
                "operationId": "read_event",
                "summary": "Read Event",
                "description": "",
                "tags": [
                    "event"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/event_response"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/notification": {
            "summary": "Notification",
            "description": "",
            "get": {
                "operationId": "list_notification",
                "summary": "List Notification",
                "description": "",
                "tags": [
                    "notification"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the event notified by this resource.",
                        "name": "event_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the party concerned by this notification.",
                        "name": "party_id"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/notification_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/notification/{id}": {
            "summary": "Notification - single",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14
                }
            ],
            "get": {
                "operationId": "read_notification",
                "summary": "Read Notification",
                "description": "",
                "tags": [
                    "notification"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/notification_response"
                                }
                            }
                        },
                        "description": "OK",
                        "links": {
                            "event_id": {
                                "operationId": "read_event",
                                "parameters": {
                                    "path.id": "$response.body#/event_id"
                                },
                                "description": "The `event_id` value returned in the response can be used as the `id` parameter in `GET /event/{id}`."
                            },
                            "party_id": {
                                "operationId": "read_party",
                                "parameters": {
                                    "path.id": "$response.body#/party_id"
                                },
                                "description": "The `party_id` value returned in the response can be used as the `id` parameter in `GET /party/{id}`."
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "operationId": "update_notification",
                "summary": "Update Notification",
                "description": "",
                "tags": [
                    "notification"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/notification_update_request"
                            }
                        }
                    },
                    "description": "notification",
                    "required": true
                },
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    }
                }
            }
        },
        "/accounting_point": {
            "summary": "Accounting Point",
            "description": "",
            "get": {
                "operationId": "list_accounting_point",
                "summary": "List Accounting Point",
                "description": "",
                "tags": [
                    "accounting_point"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "The system operator of the accounting point.",
                        "name": "system_operator_id"
                    },
                    {
                        "in": "query",
                        "name": "business_id",
                        "schema": {
                            "type": "string"
                        },
                        "example": "eq.somebusiness_id",
                        "description": "The GSRN metering point id of the accounting point."
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/accounting_point_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/accounting_point/{id}": {
            "summary": "Accounting Point - single",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14
                }
            ],
            "get": {
                "operationId": "read_accounting_point",
                "summary": "Read Accounting Point",
                "description": "",
                "tags": [
                    "accounting_point"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/accounting_point_response"
                                }
                            }
                        },
                        "description": "OK",
                        "links": {
                            "system_operator_id": {
                                "operationId": "read_party",
                                "parameters": {
                                    "path.id": "$response.body#/system_operator_id"
                                },
                                "description": "The `system_operator_id` value returned in the response can be used as the `id` parameter in `GET /party/{id}`."
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/accounting_point_balance_responsible_party": {
            "summary": "Accounting Point Balance Responsible Party",
            "description": "",
            "get": {
                "operationId": "list_accounting_point_balance_responsible_party",
                "summary": "List Accounting Point Balance Responsible Party",
                "description": "",
                "tags": [
                    "accounting_point_balance_responsible_party"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "The ID of the accounting point.",
                        "name": "accounting_point_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "The balance responsible party of the accounting point.",
                        "name": "balance_responsible_party_id"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/accounting_point_balance_responsible_party_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/accounting_point_energy_supplier": {
            "summary": "Accounting Point Energy Supplier",
            "description": "",
            "get": {
                "operationId": "list_accounting_point_energy_supplier",
                "summary": "List Accounting Point Energy Supplier",
                "description": "",
                "tags": [
                    "accounting_point_energy_supplier"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "The ID of the accounting point.",
                        "name": "accounting_point_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "The energy supplier of the accounting point.",
                        "name": "energy_supplier_id"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/accounting_point_energy_supplier_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/product_type": {
            "summary": "Product Type",
            "description": "",
            "get": {
                "operationId": "list_product_type",
                "summary": "List Product Type",
                "description": "",
                "tags": [
                    "product_type"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "example": "eq.somename",
                        "description": "The name of the product type."
                    },
                    {
                        "in": "query",
                        "name": "business_id",
                        "schema": {
                            "type": "string"
                        },
                        "example": "eq.somebusiness_id",
                        "description": "The code for this product type."
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/product_type_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/product_type/{id}": {
            "summary": "Product Type - single",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14
                }
            ],
            "get": {
                "operationId": "read_product_type",
                "summary": "Read Product Type",
                "description": "",
                "tags": [
                    "product_type"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/product_type_response"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/system_operator_product_type": {
            "summary": "System Operator Product Type",
            "description": "",
            "get": {
                "operationId": "list_system_operator_product_type",
                "summary": "List System Operator Product Type",
                "description": "",
                "tags": [
                    "system_operator_product_type"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the system operator.",
                        "name": "system_operator_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the product type.",
                        "name": "product_type_id"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/system_operator_product_type_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "operationId": "create_system_operator_product_type",
                "summary": "Create System Operator Product Type",
                "description": "",
                "tags": [
                    "system_operator_product_type"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/system_operator_product_type_create_request"
                            }
                        }
                    },
                    "description": "system_operator_product_type",
                    "required": false
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/system_operator_product_type_response"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/system_operator_product_type/{id}": {
            "summary": "System Operator Product Type - single",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14
                }
            ],
            "get": {
                "operationId": "read_system_operator_product_type",
                "summary": "Read System Operator Product Type",
                "description": "",
                "tags": [
                    "system_operator_product_type"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/system_operator_product_type_response"
                                }
                            }
                        },
                        "description": "OK",
                        "links": {
                            "system_operator_id": {
                                "operationId": "read_party",
                                "parameters": {
                                    "path.id": "$response.body#/system_operator_id"
                                },
                                "description": "The `system_operator_id` value returned in the response can be used as the `id` parameter in `GET /party/{id}`."
                            },
                            "product_type_id": {
                                "operationId": "read_product_type",
                                "parameters": {
                                    "path.id": "$response.body#/product_type_id"
                                },
                                "description": "The `product_type_id` value returned in the response can be used as the `id` parameter in `GET /product_type/{id}`."
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "operationId": "update_system_operator_product_type",
                "summary": "Update System Operator Product Type",
                "description": "",
                "tags": [
                    "system_operator_product_type"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/system_operator_product_type_update_request"
                            }
                        }
                    },
                    "description": "system_operator_product_type",
                    "required": true
                },
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    }
                }
            }
        },
        "/system_operator_product_type_history": {
            "summary": "System Operator Product Type - history",
            "description": "",
            "parameters": [
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the history record.",
                    "name": "id"
                },
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the System Operator Product Type whose history we want to inspect.",
                    "name": "system_operator_product_type_id"
                }
            ],
            "get": {
                "operationId": "list_system_operator_product_type_history",
                "summary": "List System Operator Product Type - history",
                "description": "",
                "tags": [
                    "system_operator_product_type"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the system operator.",
                        "name": "system_operator_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the product type.",
                        "name": "product_type_id"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/system_operator_product_type_history_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/system_operator_product_type_history/{id}": {
            "summary": "System Operator Product Type - history record",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14,
                    "description": "Identifier of the history record we want to inspect."
                }
            ],
            "get": {
                "operationId": "read_system_operator_product_type_history",
                "summary": "Read System Operator Product Type - history",
                "description": "",
                "tags": [
                    "system_operator_product_type"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/system_operator_product_type_history_response"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/service_provider_product_application": {
            "summary": "Service Provider Product Application",
            "description": "",
            "get": {
                "operationId": "list_service_provider_product_application",
                "summary": "List Service Provider Product Application",
                "description": "",
                "tags": [
                    "service_provider_product_application"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the service provider.",
                        "name": "service_provider_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the system operator.",
                        "name": "system_operator_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "References to the product types.",
                        "name": "product_type_ids"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/service_provider_product_application_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "operationId": "create_service_provider_product_application",
                "summary": "Create Service Provider Product Application",
                "description": "",
                "tags": [
                    "service_provider_product_application"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/service_provider_product_application_create_request"
                            }
                        }
                    },
                    "description": "service_provider_product_application",
                    "required": false
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_provider_product_application_response"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/service_provider_product_application/{id}": {
            "summary": "Service Provider Product Application - single",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14
                }
            ],
            "get": {
                "operationId": "read_service_provider_product_application",
                "summary": "Read Service Provider Product Application",
                "description": "",
                "tags": [
                    "service_provider_product_application"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_provider_product_application_response"
                                }
                            }
                        },
                        "description": "OK",
                        "links": {
                            "service_provider_id": {
                                "operationId": "read_party",
                                "parameters": {
                                    "path.id": "$response.body#/service_provider_id"
                                },
                                "description": "The `service_provider_id` value returned in the response can be used as the `id` parameter in `GET /party/{id}`."
                            },
                            "system_operator_id": {
                                "operationId": "read_party",
                                "parameters": {
                                    "path.id": "$response.body#/system_operator_id"
                                },
                                "description": "The `system_operator_id` value returned in the response can be used as the `id` parameter in `GET /party/{id}`."
                            },
                            "product_type_ids": {
                                "operationId": "read_product_type",
                                "parameters": {
                                    "path.id": "$response.body#/product_type_ids"
                                },
                                "description": "The `product_type_ids` value returned in the response can be used as the `id` parameter in `GET /product_type/{id}`."
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "operationId": "update_service_provider_product_application",
                "summary": "Update Service Provider Product Application",
                "description": "",
                "tags": [
                    "service_provider_product_application"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/service_provider_product_application_update_request"
                            }
                        }
                    },
                    "description": "service_provider_product_application",
                    "required": true
                },
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    }
                }
            }
        },
        "/service_provider_product_application_history": {
            "summary": "Service Provider Product Application - history",
            "description": "",
            "parameters": [
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the history record.",
                    "name": "id"
                },
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the Service Provider Product Application whose history we want to inspect.",
                    "name": "service_provider_product_application_id"
                }
            ],
            "get": {
                "operationId": "list_service_provider_product_application_history",
                "summary": "List Service Provider Product Application - history",
                "description": "",
                "tags": [
                    "service_provider_product_application"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the service provider.",
                        "name": "service_provider_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the system operator.",
                        "name": "system_operator_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "References to the product types.",
                        "name": "product_type_ids"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/service_provider_product_application_history_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/service_provider_product_application_history/{id}": {
            "summary": "Service Provider Product Application - history record",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14,
                    "description": "Identifier of the history record we want to inspect."
                }
            ],
            "get": {
                "operationId": "read_service_provider_product_application_history",
                "summary": "Read Service Provider Product Application - history",
                "description": "",
                "tags": [
                    "service_provider_product_application"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_provider_product_application_history_response"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/service_provider_product_application_comment": {
            "summary": "Service Provider Product Application Comment",
            "description": "",
            "get": {
                "operationId": "list_service_provider_product_application_comment",
                "summary": "List Service Provider Product Application Comment",
                "description": "",
                "tags": [
                    "service_provider_product_application_comment"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the service provider product application.",
                        "name": "service_provider_product_application_id"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/service_provider_product_application_comment_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "operationId": "create_service_provider_product_application_comment",
                "summary": "Create Service Provider Product Application Comment",
                "description": "",
                "tags": [
                    "service_provider_product_application_comment"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/service_provider_product_application_comment_create_request"
                            }
                        }
                    },
                    "description": "service_provider_product_application_comment",
                    "required": false
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_provider_product_application_comment_response"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/service_provider_product_application_comment/{id}": {
            "summary": "Service Provider Product Application Comment - single",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14
                }
            ],
            "get": {
                "operationId": "read_service_provider_product_application_comment",
                "summary": "Read Service Provider Product Application Comment",
                "description": "",
                "tags": [
                    "service_provider_product_application_comment"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_provider_product_application_comment_response"
                                }
                            }
                        },
                        "description": "OK",
                        "links": {
                            "service_provider_product_application_id": {
                                "operationId": "read_service_provider_product_application",
                                "parameters": {
                                    "path.id": "$response.body#/service_provider_product_application_id"
                                },
                                "description": "The `service_provider_product_application_id` value returned in the response can be used as the `id` parameter in `GET /service_provider_product_application/{id}`."
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "operationId": "update_service_provider_product_application_comment",
                "summary": "Update Service Provider Product Application Comment",
                "description": "",
                "tags": [
                    "service_provider_product_application_comment"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/service_provider_product_application_comment_update_request"
                            }
                        }
                    },
                    "description": "service_provider_product_application_comment",
                    "required": true
                },
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    }
                }
            }
        },
        "/service_provider_product_application_comment_history": {
            "summary": "Service Provider Product Application Comment - history",
            "description": "",
            "parameters": [
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the history record.",
                    "name": "id"
                },
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the Service Provider Product Application Comment whose history we want to inspect.",
                    "name": "service_provider_product_application_comment_id"
                }
            ],
            "get": {
                "operationId": "list_service_provider_product_application_comment_history",
                "summary": "List Service Provider Product Application Comment - history",
                "description": "",
                "tags": [
                    "service_provider_product_application_comment"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the service provider product application.",
                        "name": "service_provider_product_application_id"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/service_provider_product_application_comment_history_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/service_provider_product_application_comment_history/{id}": {
            "summary": "Service Provider Product Application Comment - history record",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14,
                    "description": "Identifier of the history record we want to inspect."
                }
            ],
            "get": {
                "operationId": "read_service_provider_product_application_comment_history",
                "summary": "Read Service Provider Product Application Comment - history",
                "description": "",
                "tags": [
                    "service_provider_product_application_comment"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_provider_product_application_comment_history_response"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/service_providing_group_product_application": {
            "summary": "Service Providing Group Product Application",
            "description": "",
            "get": {
                "operationId": "list_service_providing_group_product_application",
                "summary": "List Service Providing Group Product Application",
                "description": "",
                "tags": [
                    "service_providing_group_product_application"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the service providing group.",
                        "name": "service_providing_group_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the procuring system operator.",
                        "name": "procuring_system_operator_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "References to the product type.",
                        "name": "product_type_id"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/service_providing_group_product_application_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "operationId": "create_service_providing_group_product_application",
                "summary": "Create Service Providing Group Product Application",
                "description": "",
                "tags": [
                    "service_providing_group_product_application"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/service_providing_group_product_application_create_request"
                            }
                        }
                    },
                    "description": "service_providing_group_product_application",
                    "required": false
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_providing_group_product_application_response"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/service_providing_group_product_application/{id}": {
            "summary": "Service Providing Group Product Application - single",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14
                }
            ],
            "get": {
                "operationId": "read_service_providing_group_product_application",
                "summary": "Read Service Providing Group Product Application",
                "description": "",
                "tags": [
                    "service_providing_group_product_application"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_providing_group_product_application_response"
                                }
                            }
                        },
                        "description": "OK",
                        "links": {
                            "service_providing_group_id": {
                                "operationId": "read_service_providing_group",
                                "parameters": {
                                    "path.id": "$response.body#/service_providing_group_id"
                                },
                                "description": "The `service_providing_group_id` value returned in the response can be used as the `id` parameter in `GET /service_providing_group/{id}`."
                            },
                            "procuring_system_operator_id": {
                                "operationId": "read_party",
                                "parameters": {
                                    "path.id": "$response.body#/procuring_system_operator_id"
                                },
                                "description": "The `procuring_system_operator_id` value returned in the response can be used as the `id` parameter in `GET /party/{id}`."
                            },
                            "product_type_id": {
                                "operationId": "read_product_type",
                                "parameters": {
                                    "path.id": "$response.body#/product_type_id"
                                },
                                "description": "The `product_type_id` value returned in the response can be used as the `id` parameter in `GET /product_type/{id}`."
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "operationId": "update_service_providing_group_product_application",
                "summary": "Update Service Providing Group Product Application",
                "description": "",
                "tags": [
                    "service_providing_group_product_application"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/service_providing_group_product_application_update_request"
                            }
                        }
                    },
                    "description": "service_providing_group_product_application",
                    "required": true
                },
                "responses": {
                    "204": {
                        "content": {},
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Conflict"
                    }
                }
            }
        },
        "/service_providing_group_product_application_history": {
            "summary": "Service Providing Group Product Application - history",
            "description": "",
            "parameters": [
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the history record.",
                    "name": "id"
                },
                {
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "pattern": "^eq\\.[0-9]+$"
                    },
                    "example": "eq.55",
                    "description": "Identifier of the Service Providing Group Product Application whose history we want to inspect.",
                    "name": "service_providing_group_product_application_id"
                }
            ],
            "get": {
                "operationId": "list_service_providing_group_product_application_history",
                "summary": "List Service Providing Group Product Application - history",
                "description": "",
                "tags": [
                    "service_providing_group_product_application"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Unique surrogate identifier.",
                        "name": "id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the service providing group.",
                        "name": "service_providing_group_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the procuring system operator.",
                        "name": "procuring_system_operator_id"
                    },
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "References to the product type.",
                        "name": "product_type_id"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/service_providing_group_product_application_history_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/service_providing_group_product_application_history/{id}": {
            "summary": "Service Providing Group Product Application - history record",
            "description": "",
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "schema": {
                        "format": "bigint",
                        "type": "integer"
                    },
                    "example": 14,
                    "description": "Identifier of the history record we want to inspect."
                }
            ],
            "get": {
                "operationId": "read_service_providing_group_product_application_history",
                "summary": "Read Service Providing Group Product Application - history",
                "description": "",
                "tags": [
                    "service_providing_group_product_application"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service_providing_group_product_application_history_response"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/notice": {
            "summary": "Notice",
            "description": "",
            "get": {
                "operationId": "list_notice",
                "summary": "List Notice",
                "description": "",
                "tags": [
                    "notice"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "pattern": "^eq\\.[0-9]+$"
                        },
                        "example": "eq.55",
                        "description": "Reference to the party targeted by the notice.",
                        "name": "party_id"
                    },
                    {
                        "description": "Filtering Columns",
                        "in": "query",
                        "name": "select",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Ordering",
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "header",
                        "name": "Range-Unit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limiting and Pagination",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Preference",
                        "in": "header",
                        "name": "Prefer",
                        "schema": {
                            "enum": [
                                "count=none"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/notice_response"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "206": {
                        "content": {},
                        "description": "Partial Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/error_message"
                                        },
                                        {
                                            "$ref": "#/components/schemas/empty_object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Not Acceptable"
                    },
                    "416": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Range Not Satisfiable"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "https://test.flex.internal:6443/api/v0",
            "description": "Development"
        }
    ]
}
