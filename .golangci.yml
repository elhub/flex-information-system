---
# https://golangci-lint.run/usage/configuration/

version: "2"
linters:
  # using default all since it allows us to get all new linters
  # without having to update this file
  default: all
  disable:
    # depguard checks that package imports are in a
    # list of acceptable packages - not applicable at the moment
    - depguard
    # nlreturn and wsl add lots of whitespace rules that are annoying
    - nlreturn
    - wsl
    - wsl_v5
    # we allow inline error checking
    - noinlineerr
  settings:
    errcheck:
      exclude-functions:
        - (github.com/jackc/pgx/v5.Tx).Commit
        - (github.com/jackc/pgx/v5.Tx).Rollback
        - (io.Closer).Close
        - (net/http.ResponseWriter).Write
        - encoding/json.Marshal
    errchkjson:
      check-error-free-encoding: true
    forbidigo:
      forbid:
        - pattern: ^fmt\.Print.*$
        - pattern: ^log\.Print.*$
        - pattern: ^slog\.(Debug|Warn|Info|Error)$
    godox:
      keywords:
        - FIXME
    gosec:
      excludes:
        - G104 # Audit errors not checked
    ireturn:
      allow:
        - anon
        - error
        - empty
        - stdlib
        - Tracer
        - github.com\/jackc\/pgx\/v5.Tx
        - github.com\/jackc\/pgx\/v5.BatchResults
        - github.com\/jackc\/pgx\/v5.Rows
        - github.com\/jackc\/pgx\/v5.Row
    lll:
      line-length: 160
    mnd:
      checks:
        - argument
        - case
        - condition
      # - operation
        - return
      # - assign
    tagliatelle:
      case:
        rules:
          json: snake
    varnamelen:
      min-name-length: 2
      ignore-decls:
        - w http.ResponseWriter
        - r *http.Request
    recvcheck:
      disable-builtin: false
      exclusions:
        - '*.UnmarshalJSON'
    wrapcheck:
      ignore-sigs:
        - .Error
        - .Errorf(
        - errors.New(
        - errors.Unwrap(
        - errors.Join(
        - .Wrap(
        - .Wrapf(
        - .WithMessage(
        - .WithMessagef(
        - .WithStack(
        - json.Unmarshal(
        - json.Marshal(
  exclusions:
    generated: lax
    rules:
      - path: (.+)\.go$
        text: should have a package comment
    paths:
      - third_party$
      - builtin$
      - examples$
formatters:
  enable:
    - gofmt
    - gofumpt
    - goimports
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
